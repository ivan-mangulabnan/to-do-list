(()=>{"use strict";var __webpack_modules__={56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n')},72:module=>{eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzJkYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///72\n')},84:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(417);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(914), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(361), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.flex {\n    display: flex;\n}\n\n.flex-column {\n    display: flex;\n    flex-direction: column;\n}\n\n.minus-button {\n    background-color: var(--color-primary-red);\n}\n\n.checklist-div > div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 5px;\n}\n\n.checklist-div > div > div:first-of-type {\n    display: flex;\n    gap: 5px;\n}\n\n.checklist-div input[type="number"] {\n    width: 4.3rem;\n    height: 2.3rem;\n    padding-left: 1rem;\n}\n\n.checklist-div input[type="text"] {\n    width: 11.3rem;\n    height: 2.3rem;\n    padding-left: 1rem;\n}\n\n.checklist-div input[type="checkbox"] {\n    width: 1.3rem;\n    height: 1.3rem;\n    appearance: none;\n    background-color: #fff;\n    border: 1px solid #E0E0E0;\n    border-radius: 0;\n    align-self: center;\n    position: relative;\n}\n\n.checklist-div input[type="checkbox"]::before {\n    position: absolute;\n    content: "✓";\n    font-size: 2rem;\n    top: -1rem;\n    left: -.3rem;\n    color: var(--color-complete);\n    transform: scale(0);\n    transition: all 0.2s ease-in-out;\n}\n\n.checklist-div input[type="checkbox"]:checked:before {\n    transform: scale(1);\n}\n\n.checklist-div button {\n    width: 2rem;\n    font-weight: bold;\n    border-radius: .5rem;\n    border: 1px solid #E0E0E0;\n}\n\n.checklist-div button:hover {\n    background-color: var(--color-primary-red);\n    color: #E0E0E0;\n}\n\n.project-div {\n    display: flex;\n    flex-direction: column;\n    gap: .5rem;\n}\n\n.project-edit-btn {\n    content: "";\n    background: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n    border: none;\n    width: 2rem;\n    height: 2rem;\n    align-self: center;\n    background-color:  transparent;\n    filter: invert(1);\n}\n\n.project-innerdiv-first {\n    background-color: var(--color-primary-red);\n    padding: 1rem 3rem 1rem 1rem;\n    justify-content: space-between;\n    border: 2px solid var(--color-secondary-red);\n    box-shadow: 1px 6px 8px #666666;\n}\n\n.btnDiv {\n    display:flex;\n    gap: 1.5rem;\n    align-items: center;\n}\n\n.delBtn {\n    content: "";\n    background-image: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n    width: 2rem;\n    height: 2rem;\n    background-color: transparent;\n    filter: invert(1);\n    border: none;\n}\n\n.allTodosDiv {\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 1rem;\n    padding: 1rem;\n}\n\n.topPrio {\n    background-color: #E74C3C;\n    height: 1.5rem;\n}\n\n.lowPrio {\n    background-color: #B0B0B0;\n    height: 1.5rem;\n}\n\n.midPrio {\n    background-color: #F4C542;\n    height: 1.5rem;\n}\n\n.todoDiv {\n    height: 150px;\n    border: 2px solid #E0E0E0;\n    border-radius: 20px;\n    background-color: #F5F7FA;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    overflow: hidden;\n}\n\n.todoDiv:hover {\n    box-shadow: 2px 3px 4px #666666;\n}\n\n.buttonsDiv {\n    display: flex;\n    justify-content: end;\n    gap: 1rem;\n    padding-bottom: .5rem;\n    padding-right: 1rem;\n}\n\n.editButton {\n    content: "";\n    background: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n    border: none;\n    width: 1.5rem;\n    height: 1.5rem;\n    align-self: center;\n    background-color:  transparent;\n    border-radius: .3rem;\n    margin-left: auto;\n}\n\n.todoDiv input {\n    appearance: none;\n    width: 1.5rem;\n    height: 1.5rem;\n    background-color: #fff;\n    margin-left: 1rem;\n    border-radius: .4rem;\n    border: 2px solid var(--color-borders);\n    position: relative;\n}\n\n.check::before {\n    position: absolute;\n    content: "✔";\n    font-size: 2.5rem;\n    top: -1.3rem;\n    left: -.3rem;\n    color: var(--color-complete);\n}\n\nbutton:hover {\n    transform: translate(-1px, -2px);\n}\n\n.delButton {\n    content: "";\n    background: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n    border: none;\n    width: 1.5rem;\n    height: 1.5rem;\n    align-self: center;\n    background-color:  transparent;\n}\n\n.todoTitle {\n    font-size: 1.2rem;\n    text-align: center;\n    word-wrap: break-word;\n}\n\n.nav-projects {\n    padding-right: 1rem;\n}\n\n.nav-projects > div {\n    padding: .3rem 1rem;\n    margin-bottom: .7rem;\n}\n\n.nav-projects p {\n    font-size: 1.3rem;\n    font-weight: bold;\n}\n\n.nav-location {\n    border-left: .45rem solid var(--color-secondary-red);\n    background-color: var(--color-hover);\n    color: var(--color-background);\n}\n\n/* .projectMainDiv {\n    height: 100vh;\n} */\n\n.projectTitleDiv {\n    display: flex;\n    justify-content: space-between;\n    padding: 1rem 3rem 1rem 1rem;\n    font-family: var(--font-poppins);\n    background-color: var(--color-primary-red);\n    border: 2px solid var(--color-secondary-red);\n    box-shadow: 1px 6px 8px #666666;\n    align-items: center;\n    margin-bottom: 1rem;\n}\n\n.btnsDiv {\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n}\n\n.empty {\n    margin-top: 25%;\n    margin-left: 37%;\n    font-family: var(--font-lato);\n    font-size: 1.6rem;\n    font-weight: bold;\n    color: var(--color-borders);\n}\n\n.withTodo {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));\n    padding: 1rem;\n    gap: 1rem;\n}\n\n.todo-wrapper {\n    padding: 1rem;\n    background-color: #F5F7FA;\n    border-radius: 1rem;\n}\n\n.todo-main-div {\n    margin-bottom: 1rem;\n}\n\n.todo-headers {\n    font-size: .9rem;\n    font-weight: bold;\n    letter-spacing: .2rem;\n    color: #808080;\n    margin-bottom: .3rem;\n}\n\n.todo-content-wrapper {\n    background-color: #fff;\n    padding: .5rem;\n    border-radius: 1rem;\n}\n\n.todo-content-item {\n    font-size: 1.3rem;\n    font-family: var(--font-lato);\n}\n\n.date-prio-div {\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    gap: 2rem;\n}\n\n.top {\n    color: #fff;\n    background-color: #E74C3C;\n    font-weight: bold;\n}\n\n.mid {\n    color: #fff;\n    background-color: #F4C542;\n    font-weight: bold;\n}\n\n.low {\n    color: #fff;\n    background-color: #B0B0B0;\n    font-weight: bold;\n}\n\n.completed {\n    background-color: var(--color-complete);\n    color: #fff;\n}\n\n.in-progress {\n    background-color: #e9e934;\n}\n\n.check-wrapper {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    gap: .5rem;\n}\n\n.chk-div {\n    border-radius: 1rem;\n    padding: 1rem 1rem;\n    background-color: #F5F7FA;\n}\n\n.chk-status {\n    font-size: .8rem;\n    font-weight: bold;\n    letter-spacing: 2px;\n    width: max-content;\n    padding: .3rem 1rem;\n    border-radius: 1rem;\n    margin-bottom: .3rem;\n}\n\n.chkp {\n    padding: .4rem .8rem;\n    border-radius: 1rem;\n    font-weight: bold;\n    background-color: #fff;\n    color: #333;\n}\n\n.todo:hover {\n    box-shadow: 2px 3px 4px #666666;\n}\n\n.btn-div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.chkbox {\n    appearance: none;\n    background: #fff;\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: .4rem;\n    border: 1px solid var(--color-borders);\n    position: relative;\n}\n\n.chkbox:checked::before {\n    position: absolute;\n    content: "✓";\n    font-size: 2rem;\n    font-weight: bold;\n    top: -.8rem;\n    left: -.1rem;\n    color: var(--color-complete);\n}\n\n.completion-div {\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n}\n\n.mark {\n    font-weight: bold;\n    font-size: 1.1rem;\n}\n\n.mod-rmv-div {\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n    justify-content: center;\n}\n\n.edit-dialog {\n    top: 5%;\n    left: 38%;\n    background-color: #fff;\n    padding: 1rem;\n    border-radius: 1rem;\n    width: 512px;\n}\n\n.modify-button {\n    outline: none;\n}\n\n.remove-button {\n    outline: none;\n}\n\n.edit-header {\n    font-size: .8rem;\n    font-weight: bold;\n    font-family: var(--font-poppins);\n    color: #333;\n    letter-spacing: .2rem;\n    padding-left: .6rem;\n}\n\n.edit-main-div {\n    display: grid;\n    gap: .5rem;\n}\n\n.edit-section-div {\n    display: grid;\n    gap: .3rem;\n    background-color: #F5F7FA;\n    border-radius: 1rem;\n    padding: .3rem;\n}\n\n.edit-item-select {\n    padding: .3rem .5rem;\n    background-color: #fff;\n    outline: none;\n    font-size: 1.1rem;\n    border-radius: 1rem;\n    border: none;\n}\n\n.edit-item-input {\n    padding: .3rem .5rem;\n    background-color: #fff;\n    outline: none;\n    font-size: 1.1rem;\n    border-radius: 1rem;\n    border: none;\n    width: 29rem;\n}\n\n.edit-item-date {\n    width: fit-content;\n}\n\n.edit-item-textarea {\n    padding: .3rem .5rem;\n    background-color: #fff;\n    outline: none;\n    font-size: 1rem;\n    border-radius: 1rem;\n    border: none;\n    width: 29rem;\n    height: 4rem;\n}\n\n.checklist-entity-div {\n    display: flex;\n    align-items: center;\n    margin-bottom: .2rem;\n}\n\n.checklist-entity-div p {\n    font-size: .8rem;\n    font-weight: bold;\n    letter-spacing: 1.5px;\n}\n\n.checklist-entity-div > div:first-of-type {\n    margin-left: 1rem;\n}\n\n.checklist-entity-div > div:nth-of-type(2) {\n    margin-left: 1rem;\n    margin-right: auto;\n}\n\n.checklist-entity-div > div:nth-of-type(3) {\n    margin-right: 7rem;\n}\n\n.checklist-chkdiv {\n    display: grid;\n    gap: .4rem;\n    max-height: 4.5rem;\n    overflow: auto;\n    padding: .3rem 0;\n    align-items: center;\n}\n\n.checklist-single-div {\n    display: flex;\n    align-items: center;\n}\n\n.checklist-single-div > div:first-of-type {\n    display: flex;\n    align-items: center;\n    margin-left: 2rem;\n}\n\n.checklist-single-div > div:nth-of-type(2) {\n    margin-left: 1.5rem;\n    border: none;\n}\n\n.checklist-single-div > div:nth-of-type(3) {\n    margin-left: 1.5rem;\n}\n\n.checklist-single-div > div:nth-of-type(4) {\n    margin-left: 1.5rem;\n}\n\n.checklist-single-div button {\n    width: 1.8rem;\n    height: 1.6rem;\n    border-radius: .3rem;\n    background-color: #E74C3C;\n    color: #fff;\n    border: none;\n    outline: none;\n}\n\n.checklist-single-div input[type="number"] {\n    width: 5rem;\n}\n\n.checklist-single-div input[type="text"] {\n    width: 13rem;\n}\n\n.checklist-single-div input[type="number"],\n.checklist-single-div input[type="text"] {\n    border: none;\n    padding: .3rem .5rem;\n    border-radius: 1rem;\n    outline: none;\n}\n\n.checklist-single-div input[type="checkbox"] {\n    appearance: none;\n    width: 1.3rem;\n    height: 1.3rem;\n    background-color: #fff;\n    outline: none;\n    border: 1px solid var(--color-borders);\n    border-radius: .4rem;\n    position: relative;\n}\n\n.checklist-single-div input[type="checkbox"]::before {\n    content: "✔";\n    position: absolute;\n    font-size: 1.4rem;\n    top: -7px;\n    color: var(--color-complete);\n    transform: scale(0);\n    transition: all .2s ease-in-out;\n}\n\n.checklist-single-div input[type="checkbox"]:checked::before {\n    transform-origin: center;\n    transform: scale(1);\n    transition: all .2s ease-in-out;\n}\n\n.edit-completion-div {\n    display: flex;\n    align-items: center;\n}\n\n.edit-completion-div > input {\n    appearance: none;\n    width: 1.3rem;\n    height: 1.3rem;\n    background-color: #fff;\n    outline: none;\n    border: 1px solid var(--color-borders);\n    border-radius: .4rem;\n    position: relative;\n    margin-left: 1.9rem;\n}\n\n.edit-completion-div > input::before {\n    content: "✔";\n    position: absolute;\n    font-size: 1.4rem;\n    top: -7px;\n    color: var(--color-complete);\n    transform: scale(0);\n    transition: all .2s ease-in-out;\n}\n\n.edit-completion-div input:checked::before {\n    transform-origin: center;\n    transform: scale(1);\n    transition: all .2s ease-in-out;\n}\n\n.edit-completion-div > p {\n    margin-left: 1rem;\n    font-weight: bold;\n}\n\n.edit-btn-div {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 1rem;\n}\n\n.edit-btn-div > button {\n    font-size: 2rem;\n    background-color: transparent;\n    border: none;\n}\n\n.edit-btn-div > button:hover {\n    text-shadow: 1px 2px 3px #666666;\n}\n\n.edit-aprv-btn {\n    color: var(--color-complete);\n}\n\n.edit-rmv-btn {\n    color: var(--color-primary-red);\n}\n\n.edit-project {\n    position: relative;\n    overflow: hidden;\n}\n\n.edit-add-proj {\n    position: absolute;\n    font-weight: bold;\n    font-size: 1.3rem;\n    left: 20%;\n    top: -.1rem;\n    width: 2rem;\n    background-color: transparent;\n    border: none;\n    color: var(--color-complete);\n    outline: none;\n}\n\n.edit-minus-proj {\n    color: #E74C3C;\n    font-weight: bold;\n    font-size: 3rem;\n    position: absolute;\n    left: 20%;\n    top: -1.5rem;\n    width: 2rem;\n    background-color: transparent;\n    border: none;\n    outline: none;\n}\n\n.edit-new-proj {\n    display: none;\n    position: absolute;\n    right: 2%;\n    top: 5%;\n}\n\n.edit-new-proj > div:first-of-type {\n    display: flex;\n    align-items: center;\n    gap: .4rem;\n    margin-bottom: 2px;\n}\n\n.edit-new-proj input {\n    height: 1.6rem;\n    width: 11rem;\n    border-radius: 1rem;\n    padding: .3rem .5rem;\n    border: none;\n    outline: none;\n}\n\n.edit-new-proj p {\n    font-size: .8rem;\n    font-weight: bold;\n    color: #333;\n    letter-spacing: 1px;\n}\n\n.edit-new-proj > div:last-of-type {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    padding: .2rem;\n}\n\n.edit-new-proj button {\n    font-size: .8rem;\n    font-weight: bold;\n    padding: .2rem;\n    border-radius: .3rem;\n    background-color: var(--color-complete);\n    color: #fff;\n    border: 1px solid var(--color-borders);\n}\n\n.show-display {\n    display: block;\n}\n\n.edit-checklist {\n    position: relative;\n}\n\n.checklist-plus {\n    position: absolute;\n    left: 25%;\n    background-color: transparent;\n    color: var(--color-complete);\n    border: none;\n    font-weight: bold;\n    font-size: 1.3rem;\n}\n\n.project-dialog {\n    width: 700px;\n    top: 25%;\n    left: 34%;\n    height: 300px;\n    border-radius: 1rem;\n    border: 2px solid var(--color-borders);\n    outline: none;\n    padding: 1rem;\n}\n\n.project-dialog > form {\n    background-color: #F5F7FA;\n    height: 100%;\n    padding: 1rem;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 1rem;\n}\n\n.project-dialog div:first-of-type {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.project-dialog label {\n    font-size: 1.5rem;\n    font-weight: 1000;\n    letter-spacing: .1rem;\n    padding-left: 1rem;\n}\n\n.project-dialog input {\n    font-size: 2rem;\n    border: 1px solid var(--color-borders);\n    outline: none;\n    padding: .5rem 1rem;\n    border-radius: 2rem;\n}\n\n.project-dialog button {\n    font-size: 3rem;\n    border: none;\n    background: transparent;\n}\n\n.project-dialog button:first-of-type {\n    color: var(--color-complete);\n}\n\n.project-dialog button:last-of-type {\n    color: var(--color-primary-red);\n}\n\n.project-dialog div:last-of-type {\n    display: flex;\n    justify-content: flex-end;\n    gap: 2rem;\n    margin-right: 2rem;\n    margin-top: 1rem;\n}\n\n.warning-dialog {\n    top: 30%;\n    left: 35%;\n    border-radius: 2rem;\n    padding: .5rem;\n    border: 5px solid var(--color-borders);\n    outline: none;\n}\n\n.warning-dialog > div > div {\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n}\n\n.warning-dialog > div {\n    display: flex;\n    gap: 1rem;\n    align-items: end;\n    flex-direction: column;\n    padding: 1rem 2rem;\n    background-color: #F5F7FA;\n    border-radius: 2rem;\n}\n\n.warning-dialog p:first-of-type {\n    font-size: 3rem;\n    font-weight: 1000;\n    background-color: #F4C542;\n    height: 4rem;\n    width: 4rem;\n    text-align: center;\n    border-radius: 50%;\n    color: #fff;\n}\n\n.warning-dialog p:last-of-type {\n    font-size: 2rem;\n    font-weight: bold;\n    font-family: var(--font-lato);\n    text-align: center;\n    color: #333;\n}\n\n.warning-dialog button {\n    font-size: 2rem;\n    font-weight: 1000;\n    background-color: #2929ec;\n    color: #fff;\n    padding: .5rem;\n    width: 8rem;\n    border-radius: 2rem;\n    margin-right: .5rem;\n    border: 2px solid var(--color-borders);\n}`, "",{"version":3,"sources":["webpack://./src/css/dynamic.css"],"names":[],"mappings":"AAAA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,cAAc;IACd,gBAAgB;IAChB,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;IAChB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,UAAU;IACV,YAAY;IACZ,4BAA4B;IAC5B,mBAAmB;IACnB,gCAAgC;AACpC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,oBAAoB;IACpB,yBAAyB;AAC7B;;AAEA;IACI,0CAA0C;IAC1C,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,UAAU;AACd;;AAEA;IACI,WAAW;IACX,mDAAsC;IACtC,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,8BAA8B;IAC9B,iBAAiB;AACrB;;AAEA;IACI,0CAA0C;IAC1C,4BAA4B;IAC5B,8BAA8B;IAC9B,4CAA4C;IAC5C,+BAA+B;AACnC;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,yDAAuD;IACvD,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,4DAA4D;IAC5D,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,mBAAmB;IACnB,yBAAyB;;IAEzB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,SAAS;IACT,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,mDAAsC;IACtC,YAAY;IACZ,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,8BAA8B;IAC9B,oBAAoB;IACpB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,cAAc;IACd,sBAAsB;IACtB,iBAAiB;IACjB,oBAAoB;IACpB,sCAAsC;IACtC,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,4BAA4B;AAChC;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,WAAW;IACX,mDAAiD;IACjD,YAAY;IACZ,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,8BAA8B;AAClC;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,oDAAoD;IACpD,oCAAoC;IACpC,8BAA8B;AAClC;;AAEA;;GAEG;;AAEH;IACI,aAAa;IACb,8BAA8B;IAC9B,4BAA4B;IAC5B,gCAAgC;IAChC,0CAA0C;IAC1C,4CAA4C;IAC5C,+BAA+B;IAC/B,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,6BAA6B;IAC7B,iBAAiB;IACjB,iBAAiB;IACjB,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,4DAA4D;IAC5D,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,qBAAqB;IACrB,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,sBAAsB;IACtB,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA;IACI,uCAAuC;IACvC,WAAW;AACf;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,2DAA2D;IAC3D,UAAU;AACd;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,iBAAiB;IACjB,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,cAAc;IACd,oBAAoB;IACpB,sCAAsC;IACtC,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,YAAY;IACZ,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,OAAO;IACP,SAAS;IACT,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,gCAAgC;IAChC,WAAW;IACX,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,UAAU;AACd;;AAEA;IACI,aAAa;IACb,UAAU;IACV,yBAAyB;IACzB,mBAAmB;IACnB,cAAc;AAClB;;AAEA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,aAAa;IACb,eAAe;IACf,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,UAAU;IACV,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,cAAc;IACd,oBAAoB;IACpB,yBAAyB;IACzB,WAAW;IACX,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,YAAY;IACZ,oBAAoB;IACpB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,cAAc;IACd,sBAAsB;IACtB,aAAa;IACb,sCAAsC;IACtC,oBAAoB;IACpB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,SAAS;IACT,4BAA4B;IAC5B,mBAAmB;IACnB,+BAA+B;AACnC;;AAEA;IACI,wBAAwB;IACxB,mBAAmB;IACnB,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,cAAc;IACd,sBAAsB;IACtB,aAAa;IACb,sCAAsC;IACtC,oBAAoB;IACpB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,SAAS;IACT,4BAA4B;IAC5B,mBAAmB;IACnB,+BAA+B;AACnC;;AAEA;IACI,wBAAwB;IACxB,mBAAmB;IACnB,+BAA+B;AACnC;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,6BAA6B;IAC7B,YAAY;AAChB;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,SAAS;IACT,WAAW;IACX,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,4BAA4B;IAC5B,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,eAAe;IACf,kBAAkB;IAClB,SAAS;IACT,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,SAAS;IACT,OAAO;AACX;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,mBAAmB;IACnB,oBAAoB;IACpB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,cAAc;IACd,oBAAoB;IACpB,uCAAuC;IACvC,WAAW;IACX,sCAAsC;AAC1C;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,6BAA6B;IAC7B,4BAA4B;IAC5B,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,aAAa;IACb,mBAAmB;IACnB,sCAAsC;IACtC,aAAa;IACb,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;;IAEb,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,sCAAsC;IACtC,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;IACT,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,QAAQ;IACR,SAAS;IACT,mBAAmB;IACnB,cAAc;IACd,sCAAsC;IACtC,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,gBAAgB;IAChB,sBAAsB;IACtB,kBAAkB;IAClB,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,6BAA6B;IAC7B,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,WAAW;IACX,cAAc;IACd,WAAW;IACX,mBAAmB;IACnB,mBAAmB;IACnB,sCAAsC;AAC1C","sourcesContent":[".flex {\\n    display: flex;\\n}\\n\\n.flex-column {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.minus-button {\\n    background-color: var(--color-primary-red);\\n}\\n\\n.checklist-div > div {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 5px;\\n}\\n\\n.checklist-div > div > div:first-of-type {\\n    display: flex;\\n    gap: 5px;\\n}\\n\\n.checklist-div input[type=\\"number\\"] {\\n    width: 4.3rem;\\n    height: 2.3rem;\\n    padding-left: 1rem;\\n}\\n\\n.checklist-div input[type=\\"text\\"] {\\n    width: 11.3rem;\\n    height: 2.3rem;\\n    padding-left: 1rem;\\n}\\n\\n.checklist-div input[type=\\"checkbox\\"] {\\n    width: 1.3rem;\\n    height: 1.3rem;\\n    appearance: none;\\n    background-color: #fff;\\n    border: 1px solid #E0E0E0;\\n    border-radius: 0;\\n    align-self: center;\\n    position: relative;\\n}\\n\\n.checklist-div input[type=\\"checkbox\\"]::before {\\n    position: absolute;\\n    content: \\"✓\\";\\n    font-size: 2rem;\\n    top: -1rem;\\n    left: -.3rem;\\n    color: var(--color-complete);\\n    transform: scale(0);\\n    transition: all 0.2s ease-in-out;\\n}\\n\\n.checklist-div input[type=\\"checkbox\\"]:checked:before {\\n    transform: scale(1);\\n}\\n\\n.checklist-div button {\\n    width: 2rem;\\n    font-weight: bold;\\n    border-radius: .5rem;\\n    border: 1px solid #E0E0E0;\\n}\\n\\n.checklist-div button:hover {\\n    background-color: var(--color-primary-red);\\n    color: #E0E0E0;\\n}\\n\\n.project-div {\\n    display: flex;\\n    flex-direction: column;\\n    gap: .5rem;\\n}\\n\\n.project-edit-btn {\\n    content: \\"\\";\\n    background: url(\\"./images/pencil.svg\\");\\n    border: none;\\n    width: 2rem;\\n    height: 2rem;\\n    align-self: center;\\n    background-color:  transparent;\\n    filter: invert(1);\\n}\\n\\n.project-innerdiv-first {\\n    background-color: var(--color-primary-red);\\n    padding: 1rem 3rem 1rem 1rem;\\n    justify-content: space-between;\\n    border: 2px solid var(--color-secondary-red);\\n    box-shadow: 1px 6px 8px #666666;\\n}\\n\\n.btnDiv {\\n    display:flex;\\n    gap: 1.5rem;\\n    align-items: center;\\n}\\n\\n.delBtn {\\n    content: \\"\\";\\n    background-image: url(\\"./images/trash-can-outline.svg\\");\\n    width: 2rem;\\n    height: 2rem;\\n    background-color: transparent;\\n    filter: invert(1);\\n    border: none;\\n}\\n\\n.allTodosDiv {\\n    display: grid;\\n    width: 100%;\\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\\n    gap: 1rem;\\n    padding: 1rem;\\n}\\n\\n.topPrio {\\n    background-color: #E74C3C;\\n    height: 1.5rem;\\n}\\n\\n.lowPrio {\\n    background-color: #B0B0B0;\\n    height: 1.5rem;\\n}\\n\\n.midPrio {\\n    background-color: #F4C542;\\n    height: 1.5rem;\\n}\\n\\n.todoDiv {\\n    height: 150px;\\n    border: 2px solid #E0E0E0;\\n    border-radius: 20px;\\n    background-color: #F5F7FA;\\n\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n    overflow: hidden;\\n}\\n\\n.todoDiv:hover {\\n    box-shadow: 2px 3px 4px #666666;\\n}\\n\\n.buttonsDiv {\\n    display: flex;\\n    justify-content: end;\\n    gap: 1rem;\\n    padding-bottom: .5rem;\\n    padding-right: 1rem;\\n}\\n\\n.editButton {\\n    content: \\"\\";\\n    background: url(\\"./images/pencil.svg\\");\\n    border: none;\\n    width: 1.5rem;\\n    height: 1.5rem;\\n    align-self: center;\\n    background-color:  transparent;\\n    border-radius: .3rem;\\n    margin-left: auto;\\n}\\n\\n.todoDiv input {\\n    appearance: none;\\n    width: 1.5rem;\\n    height: 1.5rem;\\n    background-color: #fff;\\n    margin-left: 1rem;\\n    border-radius: .4rem;\\n    border: 2px solid var(--color-borders);\\n    position: relative;\\n}\\n\\n.check::before {\\n    position: absolute;\\n    content: \\"✔\\";\\n    font-size: 2.5rem;\\n    top: -1.3rem;\\n    left: -.3rem;\\n    color: var(--color-complete);\\n}\\n\\nbutton:hover {\\n    transform: translate(-1px, -2px);\\n}\\n\\n.delButton {\\n    content: \\"\\";\\n    background: url(\\"./images/trash-can-outline.svg\\");\\n    border: none;\\n    width: 1.5rem;\\n    height: 1.5rem;\\n    align-self: center;\\n    background-color:  transparent;\\n}\\n\\n.todoTitle {\\n    font-size: 1.2rem;\\n    text-align: center;\\n    word-wrap: break-word;\\n}\\n\\n.nav-projects {\\n    padding-right: 1rem;\\n}\\n\\n.nav-projects > div {\\n    padding: .3rem 1rem;\\n    margin-bottom: .7rem;\\n}\\n\\n.nav-projects p {\\n    font-size: 1.3rem;\\n    font-weight: bold;\\n}\\n\\n.nav-location {\\n    border-left: .45rem solid var(--color-secondary-red);\\n    background-color: var(--color-hover);\\n    color: var(--color-background);\\n}\\n\\n/* .projectMainDiv {\\n    height: 100vh;\\n} */\\n\\n.projectTitleDiv {\\n    display: flex;\\n    justify-content: space-between;\\n    padding: 1rem 3rem 1rem 1rem;\\n    font-family: var(--font-poppins);\\n    background-color: var(--color-primary-red);\\n    border: 2px solid var(--color-secondary-red);\\n    box-shadow: 1px 6px 8px #666666;\\n    align-items: center;\\n    margin-bottom: 1rem;\\n}\\n\\n.btnsDiv {\\n    display: flex;\\n    align-items: center;\\n    gap: 1.5rem;\\n}\\n\\n.empty {\\n    margin-top: 25%;\\n    margin-left: 37%;\\n    font-family: var(--font-lato);\\n    font-size: 1.6rem;\\n    font-weight: bold;\\n    color: var(--color-borders);\\n}\\n\\n.withTodo {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));\\n    padding: 1rem;\\n    gap: 1rem;\\n}\\n\\n.todo-wrapper {\\n    padding: 1rem;\\n    background-color: #F5F7FA;\\n    border-radius: 1rem;\\n}\\n\\n.todo-main-div {\\n    margin-bottom: 1rem;\\n}\\n\\n.todo-headers {\\n    font-size: .9rem;\\n    font-weight: bold;\\n    letter-spacing: .2rem;\\n    color: #808080;\\n    margin-bottom: .3rem;\\n}\\n\\n.todo-content-wrapper {\\n    background-color: #fff;\\n    padding: .5rem;\\n    border-radius: 1rem;\\n}\\n\\n.todo-content-item {\\n    font-size: 1.3rem;\\n    font-family: var(--font-lato);\\n}\\n\\n.date-prio-div {\\n    display: flex;\\n    justify-content: center;\\n    text-align: center;\\n    gap: 2rem;\\n}\\n\\n.top {\\n    color: #fff;\\n    background-color: #E74C3C;\\n    font-weight: bold;\\n}\\n\\n.mid {\\n    color: #fff;\\n    background-color: #F4C542;\\n    font-weight: bold;\\n}\\n\\n.low {\\n    color: #fff;\\n    background-color: #B0B0B0;\\n    font-weight: bold;\\n}\\n\\n.completed {\\n    background-color: var(--color-complete);\\n    color: #fff;\\n}\\n\\n.in-progress {\\n    background-color: #e9e934;\\n}\\n\\n.check-wrapper {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n    gap: .5rem;\\n}\\n\\n.chk-div {\\n    border-radius: 1rem;\\n    padding: 1rem 1rem;\\n    background-color: #F5F7FA;\\n}\\n\\n.chk-status {\\n    font-size: .8rem;\\n    font-weight: bold;\\n    letter-spacing: 2px;\\n    width: max-content;\\n    padding: .3rem 1rem;\\n    border-radius: 1rem;\\n    margin-bottom: .3rem;\\n}\\n\\n.chkp {\\n    padding: .4rem .8rem;\\n    border-radius: 1rem;\\n    font-weight: bold;\\n    background-color: #fff;\\n    color: #333;\\n}\\n\\n.todo:hover {\\n    box-shadow: 2px 3px 4px #666666;\\n}\\n\\n.btn-div {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n}\\n\\n.chkbox {\\n    appearance: none;\\n    background: #fff;\\n    width: 1.5rem;\\n    height: 1.5rem;\\n    border-radius: .4rem;\\n    border: 1px solid var(--color-borders);\\n    position: relative;\\n}\\n\\n.chkbox:checked::before {\\n    position: absolute;\\n    content: \\"✓\\";\\n    font-size: 2rem;\\n    font-weight: bold;\\n    top: -.8rem;\\n    left: -.1rem;\\n    color: var(--color-complete);\\n}\\n\\n.completion-div {\\n    display: flex;\\n    align-items: center;\\n    gap: .5rem;\\n}\\n\\n.mark {\\n    font-weight: bold;\\n    font-size: 1.1rem;\\n}\\n\\n.mod-rmv-div {\\n    display: flex;\\n    gap: 1rem;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.edit-dialog {\\n    top: 5%;\\n    left: 38%;\\n    background-color: #fff;\\n    padding: 1rem;\\n    border-radius: 1rem;\\n    width: 512px;\\n}\\n\\n.modify-button {\\n    outline: none;\\n}\\n\\n.remove-button {\\n    outline: none;\\n}\\n\\n.edit-header {\\n    font-size: .8rem;\\n    font-weight: bold;\\n    font-family: var(--font-poppins);\\n    color: #333;\\n    letter-spacing: .2rem;\\n    padding-left: .6rem;\\n}\\n\\n.edit-main-div {\\n    display: grid;\\n    gap: .5rem;\\n}\\n\\n.edit-section-div {\\n    display: grid;\\n    gap: .3rem;\\n    background-color: #F5F7FA;\\n    border-radius: 1rem;\\n    padding: .3rem;\\n}\\n\\n.edit-item-select {\\n    padding: .3rem .5rem;\\n    background-color: #fff;\\n    outline: none;\\n    font-size: 1.1rem;\\n    border-radius: 1rem;\\n    border: none;\\n}\\n\\n.edit-item-input {\\n    padding: .3rem .5rem;\\n    background-color: #fff;\\n    outline: none;\\n    font-size: 1.1rem;\\n    border-radius: 1rem;\\n    border: none;\\n    width: 29rem;\\n}\\n\\n.edit-item-date {\\n    width: fit-content;\\n}\\n\\n.edit-item-textarea {\\n    padding: .3rem .5rem;\\n    background-color: #fff;\\n    outline: none;\\n    font-size: 1rem;\\n    border-radius: 1rem;\\n    border: none;\\n    width: 29rem;\\n    height: 4rem;\\n}\\n\\n.checklist-entity-div {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: .2rem;\\n}\\n\\n.checklist-entity-div p {\\n    font-size: .8rem;\\n    font-weight: bold;\\n    letter-spacing: 1.5px;\\n}\\n\\n.checklist-entity-div > div:first-of-type {\\n    margin-left: 1rem;\\n}\\n\\n.checklist-entity-div > div:nth-of-type(2) {\\n    margin-left: 1rem;\\n    margin-right: auto;\\n}\\n\\n.checklist-entity-div > div:nth-of-type(3) {\\n    margin-right: 7rem;\\n}\\n\\n.checklist-chkdiv {\\n    display: grid;\\n    gap: .4rem;\\n    max-height: 4.5rem;\\n    overflow: auto;\\n    padding: .3rem 0;\\n    align-items: center;\\n}\\n\\n.checklist-single-div {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.checklist-single-div > div:first-of-type {\\n    display: flex;\\n    align-items: center;\\n    margin-left: 2rem;\\n}\\n\\n.checklist-single-div > div:nth-of-type(2) {\\n    margin-left: 1.5rem;\\n    border: none;\\n}\\n\\n.checklist-single-div > div:nth-of-type(3) {\\n    margin-left: 1.5rem;\\n}\\n\\n.checklist-single-div > div:nth-of-type(4) {\\n    margin-left: 1.5rem;\\n}\\n\\n.checklist-single-div button {\\n    width: 1.8rem;\\n    height: 1.6rem;\\n    border-radius: .3rem;\\n    background-color: #E74C3C;\\n    color: #fff;\\n    border: none;\\n    outline: none;\\n}\\n\\n.checklist-single-div input[type=\\"number\\"] {\\n    width: 5rem;\\n}\\n\\n.checklist-single-div input[type=\\"text\\"] {\\n    width: 13rem;\\n}\\n\\n.checklist-single-div input[type=\\"number\\"],\\n.checklist-single-div input[type=\\"text\\"] {\\n    border: none;\\n    padding: .3rem .5rem;\\n    border-radius: 1rem;\\n    outline: none;\\n}\\n\\n.checklist-single-div input[type=\\"checkbox\\"] {\\n    appearance: none;\\n    width: 1.3rem;\\n    height: 1.3rem;\\n    background-color: #fff;\\n    outline: none;\\n    border: 1px solid var(--color-borders);\\n    border-radius: .4rem;\\n    position: relative;\\n}\\n\\n.checklist-single-div input[type=\\"checkbox\\"]::before {\\n    content: \\"✔\\";\\n    position: absolute;\\n    font-size: 1.4rem;\\n    top: -7px;\\n    color: var(--color-complete);\\n    transform: scale(0);\\n    transition: all .2s ease-in-out;\\n}\\n\\n.checklist-single-div input[type=\\"checkbox\\"]:checked::before {\\n    transform-origin: center;\\n    transform: scale(1);\\n    transition: all .2s ease-in-out;\\n}\\n\\n.edit-completion-div {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.edit-completion-div > input {\\n    appearance: none;\\n    width: 1.3rem;\\n    height: 1.3rem;\\n    background-color: #fff;\\n    outline: none;\\n    border: 1px solid var(--color-borders);\\n    border-radius: .4rem;\\n    position: relative;\\n    margin-left: 1.9rem;\\n}\\n\\n.edit-completion-div > input::before {\\n    content: \\"✔\\";\\n    position: absolute;\\n    font-size: 1.4rem;\\n    top: -7px;\\n    color: var(--color-complete);\\n    transform: scale(0);\\n    transition: all .2s ease-in-out;\\n}\\n\\n.edit-completion-div input:checked::before {\\n    transform-origin: center;\\n    transform: scale(1);\\n    transition: all .2s ease-in-out;\\n}\\n\\n.edit-completion-div > p {\\n    margin-left: 1rem;\\n    font-weight: bold;\\n}\\n\\n.edit-btn-div {\\n    display: flex;\\n    justify-content: flex-end;\\n    align-items: center;\\n    gap: 1rem;\\n}\\n\\n.edit-btn-div > button {\\n    font-size: 2rem;\\n    background-color: transparent;\\n    border: none;\\n}\\n\\n.edit-btn-div > button:hover {\\n    text-shadow: 1px 2px 3px #666666;\\n}\\n\\n.edit-aprv-btn {\\n    color: var(--color-complete);\\n}\\n\\n.edit-rmv-btn {\\n    color: var(--color-primary-red);\\n}\\n\\n.edit-project {\\n    position: relative;\\n    overflow: hidden;\\n}\\n\\n.edit-add-proj {\\n    position: absolute;\\n    font-weight: bold;\\n    font-size: 1.3rem;\\n    left: 20%;\\n    top: -.1rem;\\n    width: 2rem;\\n    background-color: transparent;\\n    border: none;\\n    color: var(--color-complete);\\n    outline: none;\\n}\\n\\n.edit-minus-proj {\\n    color: #E74C3C;\\n    font-weight: bold;\\n    font-size: 3rem;\\n    position: absolute;\\n    left: 20%;\\n    top: -1.5rem;\\n    width: 2rem;\\n    background-color: transparent;\\n    border: none;\\n    outline: none;\\n}\\n\\n.edit-new-proj {\\n    display: none;\\n    position: absolute;\\n    right: 2%;\\n    top: 5%;\\n}\\n\\n.edit-new-proj > div:first-of-type {\\n    display: flex;\\n    align-items: center;\\n    gap: .4rem;\\n    margin-bottom: 2px;\\n}\\n\\n.edit-new-proj input {\\n    height: 1.6rem;\\n    width: 11rem;\\n    border-radius: 1rem;\\n    padding: .3rem .5rem;\\n    border: none;\\n    outline: none;\\n}\\n\\n.edit-new-proj p {\\n    font-size: .8rem;\\n    font-weight: bold;\\n    color: #333;\\n    letter-spacing: 1px;\\n}\\n\\n.edit-new-proj > div:last-of-type {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-end;\\n    padding: .2rem;\\n}\\n\\n.edit-new-proj button {\\n    font-size: .8rem;\\n    font-weight: bold;\\n    padding: .2rem;\\n    border-radius: .3rem;\\n    background-color: var(--color-complete);\\n    color: #fff;\\n    border: 1px solid var(--color-borders);\\n}\\n\\n.show-display {\\n    display: block;\\n}\\n\\n.edit-checklist {\\n    position: relative;\\n}\\n\\n.checklist-plus {\\n    position: absolute;\\n    left: 25%;\\n    background-color: transparent;\\n    color: var(--color-complete);\\n    border: none;\\n    font-weight: bold;\\n    font-size: 1.3rem;\\n}\\n\\n.project-dialog {\\n    width: 700px;\\n    top: 25%;\\n    left: 34%;\\n    height: 300px;\\n    border-radius: 1rem;\\n    border: 2px solid var(--color-borders);\\n    outline: none;\\n    padding: 1rem;\\n}\\n\\n.project-dialog > form {\\n    background-color: #F5F7FA;\\n    height: 100%;\\n    padding: 1rem;\\n\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    gap: 1rem;\\n}\\n\\n.project-dialog div:first-of-type {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n}\\n\\n.project-dialog label {\\n    font-size: 1.5rem;\\n    font-weight: 1000;\\n    letter-spacing: .1rem;\\n    padding-left: 1rem;\\n}\\n\\n.project-dialog input {\\n    font-size: 2rem;\\n    border: 1px solid var(--color-borders);\\n    outline: none;\\n    padding: .5rem 1rem;\\n    border-radius: 2rem;\\n}\\n\\n.project-dialog button {\\n    font-size: 3rem;\\n    border: none;\\n    background: transparent;\\n}\\n\\n.project-dialog button:first-of-type {\\n    color: var(--color-complete);\\n}\\n\\n.project-dialog button:last-of-type {\\n    color: var(--color-primary-red);\\n}\\n\\n.project-dialog div:last-of-type {\\n    display: flex;\\n    justify-content: flex-end;\\n    gap: 2rem;\\n    margin-right: 2rem;\\n    margin-top: 1rem;\\n}\\n\\n.warning-dialog {\\n    top: 30%;\\n    left: 35%;\\n    border-radius: 2rem;\\n    padding: .5rem;\\n    border: 5px solid var(--color-borders);\\n    outline: none;\\n}\\n\\n.warning-dialog > div > div {\\n    display: flex;\\n    gap: 1rem;\\n    align-items: center;\\n}\\n\\n.warning-dialog > div {\\n    display: flex;\\n    gap: 1rem;\\n    align-items: end;\\n    flex-direction: column;\\n    padding: 1rem 2rem;\\n    background-color: #F5F7FA;\\n    border-radius: 2rem;\\n}\\n\\n.warning-dialog p:first-of-type {\\n    font-size: 3rem;\\n    font-weight: 1000;\\n    background-color: #F4C542;\\n    height: 4rem;\\n    width: 4rem;\\n    text-align: center;\\n    border-radius: 50%;\\n    color: #fff;\\n}\\n\\n.warning-dialog p:last-of-type {\\n    font-size: 2rem;\\n    font-weight: bold;\\n    font-family: var(--font-lato);\\n    text-align: center;\\n    color: #333;\\n}\\n\\n.warning-dialog button {\\n    font-size: 2rem;\\n    font-weight: 1000;\\n    background-color: #2929ec;\\n    color: #fff;\\n    padding: .5rem;\\n    width: 8rem;\\n    border-radius: 2rem;\\n    margin-right: .5rem;\\n    border: 2px solid var(--color-borders);\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84\n')},113:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzPzFkZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///113\n")},310:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    height: 100%;\n    width: 100%;\n}\n\nheader {\n    width: 20rem;\n    height: 100vh;\n    border: 3px solid var(--color-borders);\n    position: fixed;\n    background-color: #F5F7FA;\n\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\nnav > div > div:first-of-type {\n    margin-bottom: 1rem;\n    padding-right: 1rem;\n}\n\nnav > div > div:first-of-type > div {\n    padding: .4rem;\n}\n\nh1 {\n    font-size: 3rem;\n    color: var(--color-primary-red);\n    font-weight: 1000;\n    align-self: center;\n}\n\nh2 {\n    font-size: 2rem;\n    color: inherit;\n}\n\na {\n    text-decoration: none;\n    color: inherit;\n}\n\n.content {\n    padding-left: 20rem;\n}\n\n.show-form-btn {\n    position: fixed;\n    font-size: 2rem;\n    font-weight: bold;\n    bottom: 5rem;\n    right: 5rem;\n    height: 4rem;\n    width: 5rem;\n    border-radius: 15%;\n    background-color: var(--color-primary-red);\n    border: 2px solid var(--color-borders);\n    color: var(--color-background);\n}\n\n.show-form-btn:active {\n    background-color: var(--color-hover);\n}\n\n.show-form-btn:hover {\n    box-shadow: .1rem .1rem .1rem var(--color-borders);\n}\n\n.show-form-btn:focus {\n    outline: none;\n}\n\n.form-dialog {\n    position: absolute;\n    top: 20%;\n    left: 33%;\n    border-radius: 1rem;\n    border: 4px solid #333;\n    overflow: hidden;\n}\n\n.no-task {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--color-borders);\n    font-family: var(--font-lato);\n}\n\n.home {\n    display: grid;\n    grid-auto-rows: auto;\n    gap: .5rem;\n}\n\n.project-name {\n    font-size: 3rem;\n    font-family: "Poppins";\n    font-weight: bold;\n    color: var(--color-background);\n    background-color: transparent;\n}\n\n.task-form {\n    height: 100%;\n\n    padding: 5px 1rem;\n    font-family: var(--font-poppins);\n    background-color: #F5F7FA;\n    color: var(--color-font);\n}\n\n.close-form-button {\n    justify-self: flex-end;\n    width: 2.5rem;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    color: var(--color-font);\n    border-radius: 20%;\n}\n\n.close-form-button:hover {\n    background-color: #D32F2F;\n    color: var(--color-background);\n}\n\n.new-project-container {\n    display: none;\n    flex-direction: column;\n    margin-top: 1.1rem;\n}\n\n.new-project-container button {\n    width: 5rem;\n    border-radius: .7rem;\n    font-weight: bold;\n    border: none;\n    color: #fff;\n    background-color: var(--color-complete);\n}\n\n.new-project-container button:active {\n    background-color: #66C366;\n}\n\n.new-project-container input {\n    width: 14rem;\n    padding: 5px .5rem;\n}\n\n.task-form > div:not(div:first-of-type) {\n    margin-top: 10px;\n}\n\n.title {\n    width: 46rem;\n    font-size: 1.5rem;\n    padding-left: .5rem;\n    height: 4rem;\n}\n\n.task-form > div:first-of-type {\n    display: flex;\n    justify-content: space-between;\n}\n\n.task-form > div:nth-of-type(3) {\n    display: flex;\n    gap: 1rem;\n}\n\n.project-container > div {\n    font-size: 1.1rem;\n}\n\n.project-container select {\n    font-size: 1.1rem;\n    width: 13rem;\n}\n\n.description {\n    height: 7rem;\n    width: 23rem;\n    padding: 10px;\n    font-size: 1.1rem;\n}\n\n.plus-item-btn {\n    font-weight: bold;\n    font-size: 1.3rem;\n    width: 2.5rem;\n    border: none;\n    outline: none;\n    background-color: var(--color-complete);\n    margin-left: 5px;\n    color: var(--color-background);\n    border-radius: 20%;\n}\n\n.plus-item-btn:active {\n    background-color: #66C366;\n}\n\n.task-form label,\n.task-form span {\n    font-size: 1.1rem;\n    font-weight: bold;\n}\n\n.task-form input,\n.task-form select,\n.task-form textarea {\n    border: 1px solid #E0E0E0;\n    outline: none;\n    border-radius: 10px;\n}\n\n.task-form select {\n    background-color: #fff;\n    padding: 3px .5rem;\n}\n\n.dueDate {\n    padding: 3px .5rem;\n}\n\n.task-form > div:nth-of-type(4) {\n    display: grid;\n    grid-template-columns: repeat(2, 50%);\n    gap: 5px;\n    height: 15rem;\n}\n\n.task-form > div:nth-of-type(4) > div:first-of-type {\n    display: grid;\n    grid-template-rows: repeat(2, auto) 1fr;\n    gap: 10px;\n    height: 15rem;\n}\n\n.task-form > div:nth-of-type(4) > div:last-of-type {\n    display: block;\n    width: 100%;\n    height: 100%;\n}\n\n.checklist-div {\n    display: block;\n    padding: 8px 5px 5px 5px;\n    margin-top: 10px;\n    height: 12.5rem;\n\n    background-color: #fff;\n    border: 1px solid #E0E0E0;\n    border-radius: 10px;\n    overflow-y: auto;\n}\n\n.notes-container {\n    display: flex;\n}\n\n.notes {\n    flex: 1;\n    padding: 3px .5rem;\n    font-size: 1.1rem;\n}\n\n.task-form > div:last-of-type {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.completion-container {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.completion-container > label {\n    font-size: 1.5rem;\n}\n\n.completion-container > input {\n    appearance: none;\n    background-color: #fff;\n    width: 2rem;\n    height: 2rem;\n    position: relative;\n}\n\n.completion-container > input::before {\n    content: "✓";\n    font-size: 3.5rem;\n    position: absolute;\n    line-height: 0;\n    top: 10px;\n    left: -3px;\n    transform: scale(0);\n    transition: all .3s ease-in-out;\n    transform-origin: center;\n    color: var(--color-complete);\n}\n\n.completion-container > input:checked::before {\n    transform: scale(1);\n}\n\n.create-todo-btn {\n    height: 5rem;\n    width: 12rem;\n    background-color: var(--color-complete);\n    color: #fff;\n    font-size: 1.5rem;\n    font-weight: bold;\n    border: 1px solid #E0E0E0;\n    border-radius: 1rem;\n}\n\n.create-todo-btn:active {\n    background-color: #66C366;\n}`, "",{"version":3,"sources":["webpack://./src/css/home.css"],"names":[],"mappings":"AAAA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sCAAsC;IACtC,eAAe;IACf,yBAAyB;;IAEzB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,+BAA+B;IAC/B,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,eAAe;IACf,iBAAiB;IACjB,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,0CAA0C;IAC1C,sCAAsC;IACtC,8BAA8B;AAClC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,kDAAkD;AACtD;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,mBAAmB;IACnB,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,eAAe;IACf,iBAAiB;IACjB,2BAA2B;IAC3B,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,UAAU;AACd;;AAEA;IACI,eAAe;IACf,sBAAsB;IACtB,iBAAiB;IACjB,8BAA8B;IAC9B,6BAA6B;AACjC;;AAEA;IACI,YAAY;;IAEZ,iBAAiB;IACjB,gCAAgC;IAChC,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,sBAAsB;IACtB,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,6BAA6B;IAC7B,YAAY;IACZ,aAAa;IACb,wBAAwB;IACxB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;IACZ,WAAW;IACX,uCAAuC;AAC3C;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;IACb,YAAY;IACZ,aAAa;IACb,uCAAuC;IACvC,gBAAgB;IAChB,8BAA8B;IAC9B,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;IAEI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;;;IAGI,yBAAyB;IACzB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,QAAQ;IACR,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uCAAuC;IACvC,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,wBAAwB;IACxB,gBAAgB;IAChB,eAAe;;IAEf,sBAAsB;IACtB,yBAAyB;IACzB,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;IACP,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,sBAAsB;IACtB,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,cAAc;IACd,SAAS;IACT,UAAU;IACV,mBAAmB;IACnB,+BAA+B;IAC/B,wBAAwB;IACxB,4BAA4B;AAChC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,uCAAuC;IACvC,WAAW;IACX,iBAAiB;IACjB,iBAAiB;IACjB,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;AAC7B","sourcesContent":["body {\\n    height: 100%;\\n    width: 100%;\\n}\\n\\nheader {\\n    width: 20rem;\\n    height: 100vh;\\n    border: 3px solid var(--color-borders);\\n    position: fixed;\\n    background-color: #F5F7FA;\\n\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n}\\n\\nnav > div > div:first-of-type {\\n    margin-bottom: 1rem;\\n    padding-right: 1rem;\\n}\\n\\nnav > div > div:first-of-type > div {\\n    padding: .4rem;\\n}\\n\\nh1 {\\n    font-size: 3rem;\\n    color: var(--color-primary-red);\\n    font-weight: 1000;\\n    align-self: center;\\n}\\n\\nh2 {\\n    font-size: 2rem;\\n    color: inherit;\\n}\\n\\na {\\n    text-decoration: none;\\n    color: inherit;\\n}\\n\\n.content {\\n    padding-left: 20rem;\\n}\\n\\n.show-form-btn {\\n    position: fixed;\\n    font-size: 2rem;\\n    font-weight: bold;\\n    bottom: 5rem;\\n    right: 5rem;\\n    height: 4rem;\\n    width: 5rem;\\n    border-radius: 15%;\\n    background-color: var(--color-primary-red);\\n    border: 2px solid var(--color-borders);\\n    color: var(--color-background);\\n}\\n\\n.show-form-btn:active {\\n    background-color: var(--color-hover);\\n}\\n\\n.show-form-btn:hover {\\n    box-shadow: .1rem .1rem .1rem var(--color-borders);\\n}\\n\\n.show-form-btn:focus {\\n    outline: none;\\n}\\n\\n.form-dialog {\\n    position: absolute;\\n    top: 20%;\\n    left: 33%;\\n    border-radius: 1rem;\\n    border: 4px solid #333;\\n    overflow: hidden;\\n}\\n\\n.no-task {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    font-size: 2rem;\\n    font-weight: bold;\\n    color: var(--color-borders);\\n    font-family: var(--font-lato);\\n}\\n\\n.home {\\n    display: grid;\\n    grid-auto-rows: auto;\\n    gap: .5rem;\\n}\\n\\n.project-name {\\n    font-size: 3rem;\\n    font-family: \\"Poppins\\";\\n    font-weight: bold;\\n    color: var(--color-background);\\n    background-color: transparent;\\n}\\n\\n.task-form {\\n    height: 100%;\\n\\n    padding: 5px 1rem;\\n    font-family: var(--font-poppins);\\n    background-color: #F5F7FA;\\n    color: var(--color-font);\\n}\\n\\n.close-form-button {\\n    justify-self: flex-end;\\n    width: 2.5rem;\\n    font-size: 1.5rem;\\n    font-weight: bold;\\n    background-color: transparent;\\n    border: none;\\n    outline: none;\\n    color: var(--color-font);\\n    border-radius: 20%;\\n}\\n\\n.close-form-button:hover {\\n    background-color: #D32F2F;\\n    color: var(--color-background);\\n}\\n\\n.new-project-container {\\n    display: none;\\n    flex-direction: column;\\n    margin-top: 1.1rem;\\n}\\n\\n.new-project-container button {\\n    width: 5rem;\\n    border-radius: .7rem;\\n    font-weight: bold;\\n    border: none;\\n    color: #fff;\\n    background-color: var(--color-complete);\\n}\\n\\n.new-project-container button:active {\\n    background-color: #66C366;\\n}\\n\\n.new-project-container input {\\n    width: 14rem;\\n    padding: 5px .5rem;\\n}\\n\\n.task-form > div:not(div:first-of-type) {\\n    margin-top: 10px;\\n}\\n\\n.title {\\n    width: 46rem;\\n    font-size: 1.5rem;\\n    padding-left: .5rem;\\n    height: 4rem;\\n}\\n\\n.task-form > div:first-of-type {\\n    display: flex;\\n    justify-content: space-between;\\n}\\n\\n.task-form > div:nth-of-type(3) {\\n    display: flex;\\n    gap: 1rem;\\n}\\n\\n.project-container > div {\\n    font-size: 1.1rem;\\n}\\n\\n.project-container select {\\n    font-size: 1.1rem;\\n    width: 13rem;\\n}\\n\\n.description {\\n    height: 7rem;\\n    width: 23rem;\\n    padding: 10px;\\n    font-size: 1.1rem;\\n}\\n\\n.plus-item-btn {\\n    font-weight: bold;\\n    font-size: 1.3rem;\\n    width: 2.5rem;\\n    border: none;\\n    outline: none;\\n    background-color: var(--color-complete);\\n    margin-left: 5px;\\n    color: var(--color-background);\\n    border-radius: 20%;\\n}\\n\\n.plus-item-btn:active {\\n    background-color: #66C366;\\n}\\n\\n.task-form label,\\n.task-form span {\\n    font-size: 1.1rem;\\n    font-weight: bold;\\n}\\n\\n.task-form input,\\n.task-form select,\\n.task-form textarea {\\n    border: 1px solid #E0E0E0;\\n    outline: none;\\n    border-radius: 10px;\\n}\\n\\n.task-form select {\\n    background-color: #fff;\\n    padding: 3px .5rem;\\n}\\n\\n.dueDate {\\n    padding: 3px .5rem;\\n}\\n\\n.task-form > div:nth-of-type(4) {\\n    display: grid;\\n    grid-template-columns: repeat(2, 50%);\\n    gap: 5px;\\n    height: 15rem;\\n}\\n\\n.task-form > div:nth-of-type(4) > div:first-of-type {\\n    display: grid;\\n    grid-template-rows: repeat(2, auto) 1fr;\\n    gap: 10px;\\n    height: 15rem;\\n}\\n\\n.task-form > div:nth-of-type(4) > div:last-of-type {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.checklist-div {\\n    display: block;\\n    padding: 8px 5px 5px 5px;\\n    margin-top: 10px;\\n    height: 12.5rem;\\n\\n    background-color: #fff;\\n    border: 1px solid #E0E0E0;\\n    border-radius: 10px;\\n    overflow-y: auto;\\n}\\n\\n.notes-container {\\n    display: flex;\\n}\\n\\n.notes {\\n    flex: 1;\\n    padding: 3px .5rem;\\n    font-size: 1.1rem;\\n}\\n\\n.task-form > div:last-of-type {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n}\\n\\n.completion-container {\\n    display: flex;\\n    align-items: center;\\n    gap: 5px;\\n}\\n\\n.completion-container > label {\\n    font-size: 1.5rem;\\n}\\n\\n.completion-container > input {\\n    appearance: none;\\n    background-color: #fff;\\n    width: 2rem;\\n    height: 2rem;\\n    position: relative;\\n}\\n\\n.completion-container > input::before {\\n    content: \\"✓\\";\\n    font-size: 3.5rem;\\n    position: absolute;\\n    line-height: 0;\\n    top: 10px;\\n    left: -3px;\\n    transform: scale(0);\\n    transition: all .3s ease-in-out;\\n    transform-origin: center;\\n    color: var(--color-complete);\\n}\\n\\n.completion-container > input:checked::before {\\n    transform: scale(1);\\n}\\n\\n.create-todo-btn {\\n    height: 5rem;\\n    width: 12rem;\\n    background-color: var(--color-complete);\\n    color: #fff;\\n    font-size: 1.5rem;\\n    font-weight: bold;\\n    border: 1px solid #E0E0E0;\\n    border-radius: 1rem;\\n}\\n\\n.create-todo-btn:active {\\n    background-color: #66C366;\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///310\n')},314:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///314\n')},354:module=>{eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///354\n')},361:(I,n,g)=>{I.exports=g.p+"bcf8d6ff346603c8a51a.svg"},417:module=>{eval('\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^[\'"].*[\'"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/["\'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return "\\"".concat(url.replace(/"/g, \'\\\\"\').replace(/\\n/g, "\\\\n"), "\\"");\n  }\n  return url;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE3LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcz8xZGU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///417\n')},523:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_css_base_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(608);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_css_home_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(310);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_css_dynamic_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84);\n// Imports\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_css_base_css__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A);\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_css_home_css__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .A);\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_css_dynamic_css__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUMwRztBQUNqQjtBQUNlO0FBQ0E7QUFDRztBQUMzRyw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GLDBCQUEwQixrR0FBaUM7QUFDM0QsMEJBQTBCLGtHQUFpQztBQUMzRCwwQkFBMEIscUdBQWlDO0FBQzNEO0FBQ0EsaURBQWlELGtFQUFrRTtBQUNuSDtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9pbmRleC5jc3M/ZmFhNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jc3MvYmFzZS5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzFfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jc3MvaG9tZS5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzJfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jc3MvZHluYW1pYy5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8yX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiXCIsXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///523\n')},540:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzP2RlNmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///540\n')},608:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap);"]);\n___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap);"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n    --color-background: #FFFFFF;\n    --color-primary-red: #E63946;\n    --color-secondary-red: #B22222;\n    --color-font: #333333;\n    --color-borders: #DDDDDD;\n    --color-hover: #FF6B6B;\n    --color-complete: #4CAF50;\n    --font-poppins: "Poppins";\n    --font-lato: "Lato";\n}\n\n*,\n*::before,\n*::after {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml,\nbody {\n    font-size: 16px;\n}\n\nbody {\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Oxygen, Ubuntu, Cantarell, \'Open Sans\', \'Helvetica Neue\', sans-serif;\n    background-color: var(--color-background);\n    color: var(--color-font);\n}\n\nbutton,\ninput,\ntextarea,\nselect {\n    font-family: inherit;\n    font-size: 100%;\n}\n\nbutton {\n    appearance: none;\n    cursor: pointer;\n}\n\ntextarea {\n    resize: none;\n}`, "",{"version":3,"sources":["webpack://./src/css/base.css"],"names":[],"mappings":"AAGA;IACI,2BAA2B;IAC3B,4BAA4B;IAC5B,8BAA8B;IAC9B,qBAAqB;IACrB,wBAAwB;IACxB,sBAAsB;IACtB,yBAAyB;IACzB,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;;;IAGI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,mJAAmJ;IACnJ,yCAAyC;IACzC,wBAAwB;AAC5B;;AAEA;;;;IAII,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB","sourcesContent":["@import url(\'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\');\\n@import url(\'https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap\');\\n\\n:root {\\n    --color-background: #FFFFFF;\\n    --color-primary-red: #E63946;\\n    --color-secondary-red: #B22222;\\n    --color-font: #333333;\\n    --color-borders: #DDDDDD;\\n    --color-hover: #FF6B6B;\\n    --color-complete: #4CAF50;\\n    --font-poppins: \\"Poppins\\";\\n    --font-lato: \\"Lato\\";\\n}\\n\\n*,\\n*::before,\\n*::after {\\n    margin: 0;\\n    padding: 0;\\n    box-sizing: border-box;\\n}\\n\\nhtml,\\nbody {\\n    font-size: 16px;\\n}\\n\\nbody {\\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Oxygen, Ubuntu, Cantarell, \'Open Sans\', \'Helvetica Neue\', sans-serif;\\n    background-color: var(--color-background);\\n    color: var(--color-font);\\n}\\n\\nbutton,\\ninput,\\ntextarea,\\nselect {\\n    font-family: inherit;\\n    font-size: 100%;\\n}\\n\\nbutton {\\n    appearance: none;\\n    cursor: pointer;\\n}\\n\\ntextarea {\\n    resize: none;\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjA4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GLHVIQUF1SCxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLG9CQUFvQjtBQUMzTyxvSEFBb0gsTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLG9CQUFvQjtBQUN4TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQyxPQUFPLG1GQUFtRixZQUFZLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxPQUFPLE9BQU8sVUFBVSxVQUFVLFlBQVksT0FBTyxNQUFNLFVBQVUsT0FBTyxLQUFLLFlBQVksYUFBYSxhQUFhLE9BQU8sUUFBUSxZQUFZLFdBQVcsT0FBTyxLQUFLLFlBQVksV0FBVyxPQUFPLEtBQUssVUFBVSx3R0FBd0csTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxxQkFBcUIsNkVBQTZFLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxxQkFBcUIsV0FBVyxrQ0FBa0MsbUNBQW1DLHFDQUFxQyw0QkFBNEIsK0JBQStCLDZCQUE2QixnQ0FBZ0Msa0NBQWtDLDRCQUE0QixHQUFHLDhCQUE4QixnQkFBZ0IsaUJBQWlCLDZCQUE2QixHQUFHLGlCQUFpQixzQkFBc0IsR0FBRyxVQUFVLDBKQUEwSixnREFBZ0QsK0JBQStCLEdBQUcsd0NBQXdDLDJCQUEyQixzQkFBc0IsR0FBRyxZQUFZLHVCQUF1QixzQkFBc0IsR0FBRyxjQUFjLG1CQUFtQixHQUFHLG1CQUFtQjtBQUNocEQ7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvY3NzL2Jhc2UuY3NzP2QyZmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Qb3BwaW5zOml0YWwsd2dodEAwLDEwMDswLDIwMDswLDMwMDswLDQwMDswLDUwMDswLDYwMDswLDcwMDswLDgwMDswLDkwMDsxLDEwMDsxLDIwMDsxLDMwMDsxLDQwMDsxLDUwMDsxLDYwMDsxLDcwMDsxLDgwMDsxLDkwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1MYXRvOml0YWwsd2dodEAwLDEwMDswLDMwMDswLDQwMDswLDcwMDswLDkwMDsxLDEwMDsxLDMwMDsxLDQwMDsxLDcwMDsxLDkwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290IHtcbiAgICAtLWNvbG9yLWJhY2tncm91bmQ6ICNGRkZGRkY7XG4gICAgLS1jb2xvci1wcmltYXJ5LXJlZDogI0U2Mzk0NjtcbiAgICAtLWNvbG9yLXNlY29uZGFyeS1yZWQ6ICNCMjIyMjI7XG4gICAgLS1jb2xvci1mb250OiAjMzMzMzMzO1xuICAgIC0tY29sb3ItYm9yZGVyczogI0RERERERDtcbiAgICAtLWNvbG9yLWhvdmVyOiAjRkY2QjZCO1xuICAgIC0tY29sb3ItY29tcGxldGU6ICM0Q0FGNTA7XG4gICAgLS1mb250LXBvcHBpbnM6IFwiUG9wcGluc1wiO1xuICAgIC0tZm9udC1sYXRvOiBcIkxhdG9cIjtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sLFxuYm9keSB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5ib2R5IHtcbiAgICBmb250LWZhbWlseTogc3lzdGVtLXVpLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmFja2dyb3VuZCk7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yLWZvbnQpO1xufVxuXG5idXR0b24sXG5pbnB1dCxcbnRleHRhcmVhLFxuc2VsZWN0IHtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IDEwMCU7XG59XG5cbmJ1dHRvbiB7XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbnRleHRhcmVhIHtcbiAgICByZXNpemU6IG5vbmU7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL2Jhc2UuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUdBO0lBQ0ksMkJBQTJCO0lBQzNCLDRCQUE0QjtJQUM1Qiw4QkFBOEI7SUFDOUIscUJBQXFCO0lBQ3JCLHdCQUF3QjtJQUN4QixzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLHlCQUF5QjtJQUN6QixtQkFBbUI7QUFDdkI7O0FBRUE7OztJQUdJLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysc0JBQXNCO0FBQzFCOztBQUVBOztJQUVJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxtSkFBbUo7SUFDbkoseUNBQXlDO0lBQ3pDLHdCQUF3QjtBQUM1Qjs7QUFFQTs7OztJQUlJLG9CQUFvQjtJQUNwQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVBvcHBpbnM6aXRhbCx3Z2h0QDAsMTAwOzAsMjAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNjAwOzAsNzAwOzAsODAwOzAsOTAwOzEsMTAwOzEsMjAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNjAwOzEsNzAwOzEsODAwOzEsOTAwJmRpc3BsYXk9c3dhcCcpO1xcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUxhdG86aXRhbCx3Z2h0QDAsMTAwOzAsMzAwOzAsNDAwOzAsNzAwOzAsOTAwOzEsMTAwOzEsMzAwOzEsNDAwOzEsNzAwOzEsOTAwJmRpc3BsYXk9c3dhcCcpO1xcblxcbjpyb290IHtcXG4gICAgLS1jb2xvci1iYWNrZ3JvdW5kOiAjRkZGRkZGO1xcbiAgICAtLWNvbG9yLXByaW1hcnktcmVkOiAjRTYzOTQ2O1xcbiAgICAtLWNvbG9yLXNlY29uZGFyeS1yZWQ6ICNCMjIyMjI7XFxuICAgIC0tY29sb3ItZm9udDogIzMzMzMzMztcXG4gICAgLS1jb2xvci1ib3JkZXJzOiAjREREREREO1xcbiAgICAtLWNvbG9yLWhvdmVyOiAjRkY2QjZCO1xcbiAgICAtLWNvbG9yLWNvbXBsZXRlOiAjNENBRjUwO1xcbiAgICAtLWZvbnQtcG9wcGluczogXFxcIlBvcHBpbnNcXFwiO1xcbiAgICAtLWZvbnQtbGF0bzogXFxcIkxhdG9cXFwiO1xcbn1cXG5cXG4qLFxcbio6OmJlZm9yZSxcXG4qOjphZnRlciB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuaHRtbCxcXG5ib2R5IHtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgZm9udC1mYW1pbHk6IHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1iYWNrZ3JvdW5kKTtcXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLWZvbnQpO1xcbn1cXG5cXG5idXR0b24sXFxuaW5wdXQsXFxudGV4dGFyZWEsXFxuc2VsZWN0IHtcXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XFxuICAgIGZvbnQtc2l6ZTogMTAwJTtcXG59XFxuXFxuYnV0dG9uIHtcXG4gICAgYXBwZWFyYW5jZTogbm9uZTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG50ZXh0YXJlYSB7XFxuICAgIHJlc2l6ZTogbm9uZTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///608\n')},659:module=>{eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzP2IyMTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///659\n')},825:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzP2U0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///825\n')},914:(I,n,g)=>{I.exports=g.p+"8d317290131028fe10cf.svg"},989:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/index.css\nvar cjs_js_src = __webpack_require__(523);\n;// ./src/index.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, "head");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(cjs_js_src/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const src = (cjs_js_src/* default */.A && cjs_js_src/* default */.A.locals ? cjs_js_src/* default */.A.locals : undefined);\n\n;// ./src/scripts/todos.js\nclass Todos {\n    static list = [];\n    static archive = [];\n\n    constructor(formInput) {\n        for (let key in formInput) {\n            this[key] = formInput[key];\n        }\n    }\n\n    static isEmpty() {\n        return Todos.list.length === 0 ? true : false;\n    }\n\n    static getProjectsWithTodo() {\n        return [...new Set(Todos.list.map(todo => todo.project))]; // gets project in each todo, then removes duplicate.\n    }\n}\n;// ./src/scripts/projects.js\nclass Projects {\n    static #list = [];\n\n    static get list() {\n        return Projects.#list;\n    }\n\n    static set list(FormList) {\n        if (Projects.#list.includes(FormList["project"])) return; // Checks for duplication.\n        Projects.#list.push(FormList["project"]);\n    }\n\n    static add(proj) {\n        const project = {};\n        project.project = proj;\n        Projects.list = project; // converts the string into obj then pass to list to check if duplicate.\n    }\n}\n;// ./src/scripts/priority.js\nclass Priority {\n    static list = ["Top Priority", "Medium Priority", "Low Priority"];\n}\n;// ./src/scripts/validation.js\nclass Validation {\n    static notEmpty(input) {\n        const trimmedInput = input.trim();\n        const notEmpty = /^(?!\\s+$).+$/;\n        return notEmpty.test(trimmedInput);\n    }\n}\n;// ./node_modules/date-fns/locale/en-US/_lib/formatDistance.js\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: "less than a second",\n    other: "less than {{count}} seconds",\n  },\n\n  xSeconds: {\n    one: "1 second",\n    other: "{{count}} seconds",\n  },\n\n  halfAMinute: "half a minute",\n\n  lessThanXMinutes: {\n    one: "less than a minute",\n    other: "less than {{count}} minutes",\n  },\n\n  xMinutes: {\n    one: "1 minute",\n    other: "{{count}} minutes",\n  },\n\n  aboutXHours: {\n    one: "about 1 hour",\n    other: "about {{count}} hours",\n  },\n\n  xHours: {\n    one: "1 hour",\n    other: "{{count}} hours",\n  },\n\n  xDays: {\n    one: "1 day",\n    other: "{{count}} days",\n  },\n\n  aboutXWeeks: {\n    one: "about 1 week",\n    other: "about {{count}} weeks",\n  },\n\n  xWeeks: {\n    one: "1 week",\n    other: "{{count}} weeks",\n  },\n\n  aboutXMonths: {\n    one: "about 1 month",\n    other: "about {{count}} months",\n  },\n\n  xMonths: {\n    one: "1 month",\n    other: "{{count}} months",\n  },\n\n  aboutXYears: {\n    one: "about 1 year",\n    other: "about {{count}} years",\n  },\n\n  xYears: {\n    one: "1 year",\n    other: "{{count}} years",\n  },\n\n  overXYears: {\n    one: "over 1 year",\n    other: "over {{count}} years",\n  },\n\n  almostXYears: {\n    one: "almost 1 year",\n    other: "almost {{count}} years",\n  },\n};\n\nconst formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === "string") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace("{{count}}", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return "in " + result;\n    } else {\n      return result + " ago";\n    }\n  }\n\n  return result;\n};\n\n;// ./node_modules/date-fns/locale/_lib/buildFormatLongFn.js\nfunction buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n\n;// ./node_modules/date-fns/locale/en-US/_lib/formatLong.js\n\n\nconst dateFormats = {\n  full: "EEEE, MMMM do, y",\n  long: "MMMM do, y",\n  medium: "MMM d, y",\n  short: "MM/dd/yyyy",\n};\n\nconst timeFormats = {\n  full: "h:mm:ss a zzzz",\n  long: "h:mm:ss a z",\n  medium: "h:mm:ss a",\n  short: "h:mm a",\n};\n\nconst dateTimeFormats = {\n  full: "{{date}} \'at\' {{time}}",\n  long: "{{date}} \'at\' {{time}}",\n  medium: "{{date}}, {{time}}",\n  short: "{{date}}, {{time}}",\n};\n\nconst formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: "full",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: "full",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: "full",\n  }),\n};\n\n;// ./node_modules/date-fns/locale/en-US/_lib/formatRelative.js\nconst formatRelativeLocale = {\n  lastWeek: "\'last\' eeee \'at\' p",\n  yesterday: "\'yesterday at\' p",\n  today: "\'today at\' p",\n  tomorrow: "\'tomorrow at\' p",\n  nextWeek: "eeee \'at\' p",\n  other: "P",\n};\n\nconst formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n\n;// ./node_modules/date-fns/locale/_lib/buildLocalizeFn.js\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don\'t start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nfunction buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : "standalone";\n\n    let valuesArray;\n    if (context === "formatting" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don\'t want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n\n;// ./node_modules/date-fns/locale/en-US/_lib/localize.js\n\n\nconst eraValues = {\n  narrow: ["B", "A"],\n  abbreviated: ["BC", "AD"],\n  wide: ["Before Christ", "Anno Domini"],\n};\n\nconst quarterValues = {\n  narrow: ["1", "2", "3", "4"],\n  abbreviated: ["Q1", "Q2", "Q3", "Q4"],\n  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you\'re working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],\n  abbreviated: [\n    "Jan",\n    "Feb",\n    "Mar",\n    "Apr",\n    "May",\n    "Jun",\n    "Jul",\n    "Aug",\n    "Sep",\n    "Oct",\n    "Nov",\n    "Dec",\n  ],\n\n  wide: [\n    "January",\n    "February",\n    "March",\n    "April",\n    "May",\n    "June",\n    "July",\n    "August",\n    "September",\n    "October",\n    "November",\n    "December",\n  ],\n};\n\nconst dayValues = {\n  narrow: ["S", "M", "T", "W", "T", "F", "S"],\n  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],\n  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],\n  wide: [\n    "Sunday",\n    "Monday",\n    "Tuesday",\n    "Wednesday",\n    "Thursday",\n    "Friday",\n    "Saturday",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: "a",\n    pm: "p",\n    midnight: "mi",\n    noon: "n",\n    morning: "morning",\n    afternoon: "afternoon",\n    evening: "evening",\n    night: "night",\n  },\n  abbreviated: {\n    am: "AM",\n    pm: "PM",\n    midnight: "midnight",\n    noon: "noon",\n    morning: "morning",\n    afternoon: "afternoon",\n    evening: "evening",\n    night: "night",\n  },\n  wide: {\n    am: "a.m.",\n    pm: "p.m.",\n    midnight: "midnight",\n    noon: "noon",\n    morning: "morning",\n    afternoon: "afternoon",\n    evening: "evening",\n    night: "night",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: "a",\n    pm: "p",\n    midnight: "mi",\n    noon: "n",\n    morning: "in the morning",\n    afternoon: "in the afternoon",\n    evening: "in the evening",\n    night: "at night",\n  },\n  abbreviated: {\n    am: "AM",\n    pm: "PM",\n    midnight: "midnight",\n    noon: "noon",\n    morning: "in the morning",\n    afternoon: "in the afternoon",\n    evening: "in the evening",\n    night: "at night",\n  },\n  wide: {\n    am: "a.m.",\n    pm: "p.m.",\n    midnight: "midnight",\n    noon: "noon",\n    morning: "in the morning",\n    afternoon: "in the afternoon",\n    evening: "in the evening",\n    night: "at night",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be \'year\', \'quarter\', \'month\', \'week\', \'date\', \'dayOfYear\',\n  // \'day\', \'hour\', \'minute\', \'second\'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + "st";\n      case 2:\n        return number + "nd";\n      case 3:\n        return number + "rd";\n    }\n  }\n  return number + "th";\n};\n\nconst localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: "wide",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: "wide",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: "wide",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: "wide",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: "wide",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: "wide",\n  }),\n};\n\n;// ./node_modules/date-fns/locale/_lib/buildMatchFn.js\nfunction buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\n;// ./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js\nfunction buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\n;// ./node_modules/date-fns/locale/en-US/_lib/match.js\n\n\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nconst match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: "wide",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: "any",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: "wide",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: "any",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: "wide",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: "any",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: "wide",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: "any",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: "any",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: "any",\n  }),\n};\n\n;// ./node_modules/date-fns/locale/en-US.js\n\n\n\n\n\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nconst enUS = {\n  code: "en-US",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\n/* harmony default export */ const en_US = ((/* unused pure expression or super */ null && (enUS)));\n\n;// ./node_modules/date-fns/_lib/defaultOptions.js\nlet defaultOptions = {};\n\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\nfunction setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n\n;// ./node_modules/date-fns/constants.js\n/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from "./constants/date-fns/constants";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nconst daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nconst daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from "./constants/date-fns/constants";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nconst maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from "./constants/date-fns/constants";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nconst minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nconst millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nconst millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nconst millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nconst millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nconst millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nconst minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nconst minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nconst minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nconst minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nconst monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nconst monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nconst quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nconst secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nconst secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nconst secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nconst secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nconst secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nconst secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nconst secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It\'s useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nconst constructFromSymbol = Symbol.for("constructDateFrom");\n\n;// ./node_modules/date-fns/constructFrom.js\n\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for("constructDateFrom")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It\'s useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from "./constructFrom/date-fns";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nfunction constructFrom(date, value) {\n  if (typeof date === "function") return date(value);\n\n  if (date && typeof date === "object" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructFrom = ((/* unused pure expression or super */ null && (constructFrom)));\n\n;// ./node_modules/date-fns/toDate.js\n\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for("constructDateFrom")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It\'s useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_toDate = ((/* unused pure expression or super */ null && (toDate)));\n\n;// ./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js\n\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for \'Europe/Prague\' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nfunction getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n\n;// ./node_modules/date-fns/_lib/normalizeDates.js\n\n\nfunction normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === "object"),\n  );\n  return dates.map(normalize);\n}\n\n;// ./node_modules/date-fns/startOfDay.js\n\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfDay = ((/* unused pure expression or super */ null && (startOfDay)));\n\n;// ./node_modules/date-fns/differenceInCalendarDays.js\n\n\n\n\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nfunction differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it\'s different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_differenceInCalendarDays = ((/* unused pure expression or super */ null && (differenceInCalendarDays)));\n\n;// ./node_modules/date-fns/startOfYear.js\n\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfYear = ((/* unused pure expression or super */ null && (startOfYear)));\n\n;// ./node_modules/date-fns/getDayOfYear.js\n\n\n\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_getDayOfYear = ((/* unused pure expression or super */ null && (getDayOfYear)));\n\n;// ./node_modules/date-fns/startOfWeek.js\n\n\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfWeek = ((/* unused pure expression or super */ null && (startOfWeek)));\n\n;// ./node_modules/date-fns/startOfISOWeek.js\n\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfISOWeek = ((/* unused pure expression or super */ null && (startOfISOWeek)));\n\n;// ./node_modules/date-fns/getISOWeekYear.js\n\n\n\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year\'s first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_getISOWeekYear = ((/* unused pure expression or super */ null && (getISOWeekYear)));\n\n;// ./node_modules/date-fns/startOfISOWeekYear.js\n\n\n\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year\'s first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfISOWeekYear = ((/* unused pure expression or super */ null && (startOfISOWeekYear)));\n\n;// ./node_modules/date-fns/getISOWeek.js\n\n\n\n\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it\'s different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_getISOWeek = ((/* unused pure expression or super */ null && (getISOWeek)));\n\n;// ./node_modules/date-fns/getWeekYear.js\n\n\n\n\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nfunction getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_getWeekYear = ((/* unused pure expression or super */ null && (getWeekYear)));\n\n;// ./node_modules/date-fns/startOfWeekYear.js\n\n\n\n\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfWeekYear = ((/* unused pure expression or super */ null && (startOfWeekYear)));\n\n;// ./node_modules/date-fns/getWeek.js\n\n\n\n\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nfunction getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it\'s different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_getWeek = ((/* unused pure expression or super */ null && (getWeek)));\n\n;// ./node_modules/date-fns/_lib/addLeadingZeros.js\nfunction addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? "-" : "";\n  const output = Math.abs(number).toString().padStart(targetLength, "0");\n  return sign + output;\n}\n\n;// ./node_modules/date-fns/_lib/format/lightFormatters.js\n\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nconst lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? "pm" : "am";\n\n    switch (token) {\n      case "a":\n      case "aa":\n        return dayPeriodEnumValue.toUpperCase();\n      case "aaa":\n        return dayPeriodEnumValue;\n      case "aaaaa":\n        return dayPeriodEnumValue[0];\n      case "aaaa":\n      default:\n        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n\n;// ./node_modules/date-fns/_lib/format/formatters.js\n\n\n\n\n\n\n\n\n\nconst dayPeriodEnum = {\n  am: "am",\n  pm: "pm",\n  midnight: "midnight",\n  noon: "noon",\n  morning: "morning",\n  afternoon: "afternoon",\n  evening: "evening",\n  night: "night",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nconst formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case "G":\n      case "GG":\n      case "GGG":\n        return localize.era(era, { width: "abbreviated" });\n      // A, B\n      case "GGGGG":\n        return localize.era(era, { width: "narrow" });\n      // Anno Domini, Before Christ\n      case "GGGG":\n      default:\n        return localize.era(era, { width: "wide" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === "yo") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: "year" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === "YY") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === "Yo") {\n      return localize.ordinalNumber(weekYear, { unit: "year" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case "Q":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case "QQ":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case "Qo":\n        return localize.ordinalNumber(quarter, { unit: "quarter" });\n      // Q1, Q2, Q3, Q4\n      case "QQQ":\n        return localize.quarter(quarter, {\n          width: "abbreviated",\n          context: "formatting",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case "QQQQQ":\n        return localize.quarter(quarter, {\n          width: "narrow",\n          context: "formatting",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case "QQQQ":\n      default:\n        return localize.quarter(quarter, {\n          width: "wide",\n          context: "formatting",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case "q":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case "qq":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case "qo":\n        return localize.ordinalNumber(quarter, { unit: "quarter" });\n      // Q1, Q2, Q3, Q4\n      case "qqq":\n        return localize.quarter(quarter, {\n          width: "abbreviated",\n          context: "standalone",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case "qqqqq":\n        return localize.quarter(quarter, {\n          width: "narrow",\n          context: "standalone",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case "qqqq":\n      default:\n        return localize.quarter(quarter, {\n          width: "wide",\n          context: "standalone",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case "M":\n      case "MM":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case "Mo":\n        return localize.ordinalNumber(month + 1, { unit: "month" });\n      // Jan, Feb, ..., Dec\n      case "MMM":\n        return localize.month(month, {\n          width: "abbreviated",\n          context: "formatting",\n        });\n      // J, F, ..., D\n      case "MMMMM":\n        return localize.month(month, {\n          width: "narrow",\n          context: "formatting",\n        });\n      // January, February, ..., December\n      case "MMMM":\n      default:\n        return localize.month(month, { width: "wide", context: "formatting" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case "L":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case "LL":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case "Lo":\n        return localize.ordinalNumber(month + 1, { unit: "month" });\n      // Jan, Feb, ..., Dec\n      case "LLL":\n        return localize.month(month, {\n          width: "abbreviated",\n          context: "standalone",\n        });\n      // J, F, ..., D\n      case "LLLLL":\n        return localize.month(month, {\n          width: "narrow",\n          context: "standalone",\n        });\n      // January, February, ..., December\n      case "LLLL":\n      default:\n        return localize.month(month, { width: "wide", context: "standalone" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === "wo") {\n      return localize.ordinalNumber(week, { unit: "week" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === "Io") {\n      return localize.ordinalNumber(isoWeek, { unit: "week" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === "do") {\n      return localize.ordinalNumber(date.getDate(), { unit: "date" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === "Do") {\n      return localize.ordinalNumber(dayOfYear, { unit: "dayOfYear" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case "E":\n      case "EE":\n      case "EEE":\n        return localize.day(dayOfWeek, {\n          width: "abbreviated",\n          context: "formatting",\n        });\n      // T\n      case "EEEEE":\n        return localize.day(dayOfWeek, {\n          width: "narrow",\n          context: "formatting",\n        });\n      // Tu\n      case "EEEEEE":\n        return localize.day(dayOfWeek, {\n          width: "short",\n          context: "formatting",\n        });\n      // Tuesday\n      case "EEEE":\n      default:\n        return localize.day(dayOfWeek, {\n          width: "wide",\n          context: "formatting",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case "e":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case "ee":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case "eo":\n        return localize.ordinalNumber(localDayOfWeek, { unit: "day" });\n      case "eee":\n        return localize.day(dayOfWeek, {\n          width: "abbreviated",\n          context: "formatting",\n        });\n      // T\n      case "eeeee":\n        return localize.day(dayOfWeek, {\n          width: "narrow",\n          context: "formatting",\n        });\n      // Tu\n      case "eeeeee":\n        return localize.day(dayOfWeek, {\n          width: "short",\n          context: "formatting",\n        });\n      // Tuesday\n      case "eeee":\n      default:\n        return localize.day(dayOfWeek, {\n          width: "wide",\n          context: "formatting",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case "c":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case "cc":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case "co":\n        return localize.ordinalNumber(localDayOfWeek, { unit: "day" });\n      case "ccc":\n        return localize.day(dayOfWeek, {\n          width: "abbreviated",\n          context: "standalone",\n        });\n      // T\n      case "ccccc":\n        return localize.day(dayOfWeek, {\n          width: "narrow",\n          context: "standalone",\n        });\n      // Tu\n      case "cccccc":\n        return localize.day(dayOfWeek, {\n          width: "short",\n          context: "standalone",\n        });\n      // Tuesday\n      case "cccc":\n      default:\n        return localize.day(dayOfWeek, {\n          width: "wide",\n          context: "standalone",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case "i":\n        return String(isoDayOfWeek);\n      // 02\n      case "ii":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case "io":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: "day" });\n      // Tue\n      case "iii":\n        return localize.day(dayOfWeek, {\n          width: "abbreviated",\n          context: "formatting",\n        });\n      // T\n      case "iiiii":\n        return localize.day(dayOfWeek, {\n          width: "narrow",\n          context: "formatting",\n        });\n      // Tu\n      case "iiiiii":\n        return localize.day(dayOfWeek, {\n          width: "short",\n          context: "formatting",\n        });\n      // Tuesday\n      case "iiii":\n      default:\n        return localize.day(dayOfWeek, {\n          width: "wide",\n          context: "formatting",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";\n\n    switch (token) {\n      case "a":\n      case "aa":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "abbreviated",\n          context: "formatting",\n        });\n      case "aaa":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: "abbreviated",\n            context: "formatting",\n          })\n          .toLowerCase();\n      case "aaaaa":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "narrow",\n          context: "formatting",\n        });\n      case "aaaa":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "wide",\n          context: "formatting",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";\n    }\n\n    switch (token) {\n      case "b":\n      case "bb":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "abbreviated",\n          context: "formatting",\n        });\n      case "bbb":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: "abbreviated",\n            context: "formatting",\n          })\n          .toLowerCase();\n      case "bbbbb":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "narrow",\n          context: "formatting",\n        });\n      case "bbbb":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "wide",\n          context: "formatting",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case "B":\n      case "BB":\n      case "BBB":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "abbreviated",\n          context: "formatting",\n        });\n      case "BBBBB":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "narrow",\n          context: "formatting",\n        });\n      case "BBBB":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: "wide",\n          context: "formatting",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === "ho") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: "hour" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === "Ho") {\n      return localize.ordinalNumber(date.getHours(), { unit: "hour" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === "Ko") {\n      return localize.ordinalNumber(hours, { unit: "hour" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === "ko") {\n      return localize.ordinalNumber(hours, { unit: "hour" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === "mo") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: "minute" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === "so") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: "second" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `\'Z\'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return "Z";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case "X":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case "XXXX":\n      case "XX": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case "XXXXX":\n      case "XXX": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ":");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `\'+00:00\'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case "x":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case "xxxx":\n      case "xx": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case "xxxxx":\n      case "xxx": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ":");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case "O":\n      case "OO":\n      case "OOO":\n        return "GMT" + formatTimezoneShort(timezoneOffset, ":");\n      // Long\n      case "OOOO":\n      default:\n        return "GMT" + formatTimezone(timezoneOffset, ":");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case "z":\n      case "zz":\n      case "zzz":\n        return "GMT" + formatTimezoneShort(timezoneOffset, ":");\n      // Long\n      case "zzzz":\n      default:\n        return "GMT" + formatTimezone(timezoneOffset, ":");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = "") {\n  const sign = offset > 0 ? "-" : "+";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? "-" : "+";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = "") {\n  const sign = offset > 0 ? "-" : "+";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\n;// ./node_modules/date-fns/_lib/format/longFormatters.js\nconst dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case "P":\n      return formatLong.date({ width: "short" });\n    case "PP":\n      return formatLong.date({ width: "medium" });\n    case "PPP":\n      return formatLong.date({ width: "long" });\n    case "PPPP":\n    default:\n      return formatLong.date({ width: "full" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case "p":\n      return formatLong.time({ width: "short" });\n    case "pp":\n      return formatLong.time({ width: "medium" });\n    case "ppp":\n      return formatLong.time({ width: "long" });\n    case "pppp":\n    default:\n      return formatLong.time({ width: "full" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case "P":\n      dateTimeFormat = formatLong.dateTime({ width: "short" });\n      break;\n    case "PP":\n      dateTimeFormat = formatLong.dateTime({ width: "medium" });\n      break;\n    case "PPP":\n      dateTimeFormat = formatLong.dateTime({ width: "long" });\n      break;\n    case "PPPP":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: "full" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace("{{date}}", dateLongFormatter(datePattern, formatLong))\n    .replace("{{time}}", timeLongFormatter(timePattern, formatLong));\n};\n\nconst longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n\n;// ./node_modules/date-fns/_lib/protectedTokens.js\nconst dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = ["D", "DD", "YY", "YYYY"];\n\nfunction isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nfunction isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nfunction warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === "Y" ? "years" : "days of the month";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n\n;// ./node_modules/date-fns/isDate.js\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate(\'2014-02-31\')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nfunction isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === "object" &&\n      Object.prototype.toString.call(value) === "[object Date]")\n  );\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isDate = ((/* unused pure expression or super */ null && (isDate)));\n\n;// ./node_modules/date-fns/isValid.js\n\n\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(\'\'))\n * //=> false\n */\nfunction isValid(date) {\n  return !((!isDate(date) && typeof date !== "number") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isValid = ((/* unused pure expression or super */ null && (isValid)));\n\n;// ./node_modules/date-fns/format.js\n\n\n\n\n\n\n\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\n\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - \'\' matches two quote characters in a row\n// - \'(\'\'|[^\'])+(\'|$) matches anything surrounded by two quote characters (\'),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|\'\'|\'(\'\'|[^\'])+(\'|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|\'\'|\'(\'\'|[^\'])+(\'|$)|./g;\n\nconst escapedStringRegExp = /^\'([^]*?)\'?$/;\nconst doubleQuoteRegExp = /\'\'/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (\') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a \'real\' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as "stand-alone" units, but are different in some languages.\n *    "Formatting" units are declined according to the rules of the language\n *    in the context of a date. "Stand-alone" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), \'do LLLL\', {locale: cs}) //=> \'6. listopad\'`\n *\n *    `format(new Date(2017, 10, 6), \'do MMMM\', {locale: cs}) //=> \'6. listopadu\'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with "2" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), \'MMM\') //=> \'Nov\'`\n *\n *    `format(new Date(2017, 10, 6), \'MMMM\') //=> \'November\'`\n *\n *    `format(new Date(2017, 10, 6), \'MMMMM\') //=> \'N\'`\n *\n *    `format(new Date(2017, 10, 6), \'MMMMMM\') //=> \'November\'`\n *\n *    `format(new Date(2017, 10, 6), \'MMMMMMM\') //=> \'November\'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), \'yyyyyyyy\') //=> \'00002017\'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), \'MM/dd/yyyy\')\n * //=> \'02/11/2014\'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from \'date-fns/locale/eo\'\n * const result = format(new Date(2014, 6, 2), "do \'de\' MMMM yyyy", {\n *   locale: eoLocale\n * })\n * //=> \'2-a de julio 2014\'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), "h \'o\'\'clock\'")\n * //=> "3 o\'clock"\n */\nfunction format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? enUS;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError("Invalid time value");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === "p" || firstCharacter === "P") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join("")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === "\'\'") {\n        return { isToken: false, value: "\'" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === "\'") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          "Format string contains an unescaped latin alphabet character `" +\n            firstCharacter +\n            "`",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join("");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, "\'");\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_format = ((/* unused pure expression or super */ null && (format)));\n\n;// ./src/scripts/dom-nodes.js\n\n\n\n\n\n\nclass Dom {\n    \n    static contentDiv = document.querySelector("#content");\n\n    static noTask() {\n        Dom.contentDiv.innerHTML = "";\n        const p = document.createElement("p");\n        p.textContent = "No Pending Tasks";\n        Dom.contentDiv.classList.add("no-task");\n        Dom.contentDiv.appendChild(p);\n    }\n\n    static displayAllProjectWithTodos() {\n        Dom.contentDiv.innerHTML = "";\n        Dom.contentDiv.classList.remove("no-task");\n\n        Todos.list.forEach(title => {\n            const div = document.createElement("div");\n            div.classList.add("project-div");\n            div.setAttribute("data-project", `${title.project}`);\n            const innverDiv = document.createElement("div");\n            innverDiv.classList.toggle("flex");\n            innverDiv.classList.toggle("gap");\n            innverDiv.classList.add("project-innerdiv-first");\n            const h3 = document.createElement("h3");\n            const btnDiv = document.createElement("div");\n            btnDiv.classList.add("btnDiv");\n            const editBtn = document.createElement("button");\n            editBtn.classList.toggle("project-edit-btn");\n            const delBtn = document.createElement("button");\n            delBtn.classList.toggle("delBtn");\n            h3.textContent = title.project;\n            h3.classList.add("project-name");\n\n            const innerdiv2 = document.createElement("div");\n            innerdiv2.id = "allTodosDiv";\n\n            btnDiv.append(editBtn, delBtn);\n            innverDiv.append(h3, btnDiv);\n            div.append(innverDiv, innerdiv2);\n            Dom.contentDiv.appendChild(div);\n        })\n    }\n\n    static initialize() {\n        Dom.contentDiv.innerHTML = "";\n\n        Nav.showProjects();\n\n        if (Todos.isEmpty() === true) {\n            Dom.noTask();\n        } else {\n            Dom.contentDiv.innerHTML = "";\n            Dom.displayAllProjectWithTodos();\n            Dom.displayTodo();\n        }\n    }\n\n    static loadFullProject(event) {\n        if (!event.target.matches("a")) return\n        Dom.contentDiv.innerHTML = "";\n        Dom.contentDiv.classList.remove("no-task");\n\n        const project = event.target.textContent;\n        const filteredTodos = Todos.list.filter(todo => todo.project === project);\n        \n        const mainDiv = document.createElement("div");\n        mainDiv.classList.add("projectMainDiv");\n        const projectTitleDiv = document.createElement("div");\n        projectTitleDiv.classList.add("projectTitleDiv");\n        const todoDiv = document.createElement("div");\n\n        const h3Div = document.createElement("div");\n        const h3 = document.createElement("h3");\n        h3.classList.add("project-name");\n        h3.textContent = project;\n\n        const btnsDiv = document.createElement("div");\n        btnsDiv.classList.add("btnsDiv");\n        const editBtn = document.createElement("button");\n        editBtn.classList.add("project-edit-btn");\n        const delBtn = document.createElement("button");\n        delBtn.classList.add("delBtn");\n\n        if (filteredTodos.length === 0) {\n            todoDiv.classList.add("empty");\n            const p = document.createElement("p");\n            p.textContent = `${project} Project is currently empty`;\n            p.classList.add("zero-task");\n            todoDiv.appendChild(p);\n        } else {\n            todoDiv.classList.add("withTodo");\n\n            filteredTodos.forEach((todo, index) => {\n\n                const todoWrapper = document.createElement("div");\n                todoWrapper.setAttribute("data-id", todo.id);\n                todoWrapper.classList.add("todo-wrapper");\n                todoWrapper.classList.add("todo");\n\n                const titleDiv = document.createElement("div");\n                titleDiv.classList.add("todo-main-div"); // category div class\n\n                const titleHeader = document.createElement("p");\n                titleHeader.classList.add("todo-headers"); // all header class\n                titleHeader.textContent = "TITLE";\n\n                const titlePWrapper = document.createElement("div");\n                titlePWrapper.classList.add("todo-content-wrapper"); // content wrapper class\n\n                const titleP = document.createElement("p");\n                titleP.classList.add("todo-content-item"); // content class\n                titleP.textContent = todo.title;\n\n                titlePWrapper.appendChild(titleP);\n                titleDiv.append(titleHeader, titlePWrapper);\n\n                const datePrioDiv = document.createElement("div"); // Date and Priority Here Starts Here.\n                datePrioDiv.classList.add("date-prio-div");\n\n                const dateDiv = document.createElement("div"); // Date starts Here\n                dateDiv.classList.add("todo-main-div");\n\n                const dateHeader = document.createElement("p");\n                dateHeader.textContent = "DUE DATE";\n                dateHeader.classList.add("todo-headers");\n\n                const datePWrapper = document.createElement("div");\n                datePWrapper.classList.add("todo-content-wrapper");\n\n                const dateP = document.createElement("p");\n                dateP.textContent = format(todo.dueDate, "MMMM d, yyyy");\n                dateP.classList.add("todo-content-item");\n                \n                datePWrapper.appendChild(dateP);\n                dateDiv.append(dateHeader, datePWrapper);\n\n                const prioDiv = document.createElement("div"); // Priority starts Here\n                prioDiv.classList.add("todo-main-div");\n\n                const prioHeader = document.createElement("p");\n                prioHeader.textContent = "PRIORITY";\n                prioHeader.classList.add("todo-headers");\n\n                const prioPWrapper = document.createElement("div");\n                prioPWrapper.classList.add("todo-content-wrapper");\n\n                const prioP = document.createElement("p");\n                prioP.textContent = todo.priority;\n                prioP.classList.add("todo-content-item");\n\n                switch(todo.priority) {\n                    case "Top Priority":\n                        prioPWrapper.classList.add("top");\n                    break\n                    case "Medium Priority":\n                        prioPWrapper.classList.add("mid");\n                    break\n                    case "Low Priority":\n                        prioPWrapper.classList.add("low");\n                    break\n                }\n                \n                prioPWrapper.appendChild(prioP);\n                prioDiv.append(prioHeader, prioPWrapper);\n\n                datePrioDiv.append(dateDiv, prioDiv);\n\n                todoWrapper.append(titleDiv, datePrioDiv);\n                todoDiv.appendChild(todoWrapper);\n\n                if (todo.description !== "") {\n                    const descriptionDiv = document.createElement("div"); // Description starts Here\n                    descriptionDiv.classList.add("todo-main-div");\n    \n                    const descriptionHeader = document.createElement("p");\n                    descriptionHeader.textContent = "DESCRIPTION";\n                    descriptionHeader.classList.add("todo-headers");\n    \n                    const descriptionPWrapper = document.createElement("div");\n                    descriptionPWrapper.classList.add("todo-content-wrapper");\n    \n                    const descriptionP = document.createElement("p");\n                    descriptionP.textContent = todo.description;\n                    descriptionP.classList.add("todo-content-item");\n                    \n                    descriptionPWrapper.appendChild(descriptionP);\n                    descriptionDiv.append(descriptionHeader, descriptionPWrapper);\n\n                    todoWrapper.appendChild(descriptionDiv);\n                }\n\n                if (todo.notes !== "") {\n                    const notesDiv = document.createElement("div"); // Note starts Here\n                    notesDiv.classList.add("todo-main-div");\n    \n                    const notesHeader = document.createElement("p");\n                    notesHeader.textContent = "NOTES";\n                    notesHeader.classList.add("todo-headers");\n    \n                    const notesPWrapper = document.createElement("div");\n                    notesPWrapper.classList.add("todo-content-wrapper");\n    \n                    const notesP = document.createElement("p");\n                    notesP.textContent = todo.notes;\n                    notesP.classList.add("todo-content-item");\n                    \n                    notesPWrapper.appendChild(notesP);\n                    notesDiv.append(notesHeader, notesPWrapper);\n                    \n                    todoWrapper.append(notesDiv);\n                }\n\n                if (todo.checklist !== null && todo.checklist.length !== 0) {\n                    const checkDiv = document.createElement("div"); // Checklist starts Here\n                    checkDiv.classList.add("todo-main-div");\n    \n                    const checkHeader = document.createElement("p");\n                    checkHeader.textContent = "CHECKLISTS";\n                    checkHeader.classList.add("todo-headers");\n    \n                    const checkPWrapper = document.createElement("div");\n                    checkPWrapper.classList.add("todo-content-wrapper");\n                    checkPWrapper.classList.add("check-wrapper");\n    \n                    todo.checklist.forEach((checklist, index) => {\n                        const chkDiv = document.createElement("div");\n                        chkDiv.classList.add("chk-div");\n                        const status = document.createElement("p");\n                        status.classList.add("chk-status");\n    \n                        if (checklist.status) {\n                            status.textContent = "COMPLETED";\n                            status.classList.add("completed");\n                        } else {\n                            status.textContent = "IN PROGRESS";\n                            status.classList.add("in-progress");\n                        }\n    \n                        const checkp = document.createElement("p");\n                        checkp.classList.add("chkp");\n                        let text = `${index + 1}. `;\n    \n                        for (let key in checklist) {\n                            if (key === "text") text += checklist[key];\n                            if (key === "quantity" && checklist[key] !== "") text += ` ${checklist[key]}x `;\n                        }\n    \n                        checkp.textContent = text;\n                        chkDiv.append(status, checkp);\n                        checkPWrapper.appendChild(chkDiv);\n                    })\n    \n                    checkDiv.append(checkHeader, checkPWrapper);\n                    todoWrapper.append(checkDiv);\n                }\n\n                const btnDiv = document.createElement("div"); // ButtonDiv starts Here\n                btnDiv.classList.add("btn-div");\n                \n                const completionDiv = document.createElement("div");\n                completionDiv.classList.add("completion-div");\n\n                const chkbox = document.createElement("input");\n                chkbox.classList.add("chkbox");\n                chkbox.type = "checkbox";\n                chkbox.id = `complete${index + 1}`;\n                chkbox.disabled = true;\n\n                if (todo.completionStatus) {\n                    chkbox.checked = true;\n                }\n\n                const label = document.createElement("label");\n                label.classList.add("mark");\n                label.textContent = "MARK AS COMPLETE";\n                label.htmlFor = `complete${index + 1}`;\n\n                completionDiv.append(chkbox, label);\n                \n                const editDelDiv = document.createElement("div");\n                editDelDiv.classList.add("mod-rmv-div");\n                const modBtn = document.createElement("button");\n                modBtn.classList.add("editButton");\n                modBtn.classList.add("modify-button");\n                const rmvBtn = document.createElement("button");\n                rmvBtn.classList.add("delButton");\n                rmvBtn.classList.add("remove-button");\n\n                editDelDiv.append(modBtn, rmvBtn);\n\n                btnDiv.append(completionDiv, editDelDiv);\n                todoWrapper.append(btnDiv);\n            })\n        }\n\n        btnsDiv.append(editBtn, delBtn);\n        h3Div.appendChild(h3);\n        projectTitleDiv.append(h3Div, btnsDiv);\n        mainDiv.append(projectTitleDiv, todoDiv);\n        Dom.contentDiv.appendChild(mainDiv);\n    }\n\n    static loadFormOptions() {\n        const projectNode = document.querySelector("#project");\n        projectNode.innerHTML = "";\n        Projects.list.forEach(project => {\n            const option = document.createElement("option");\n            option.textContent = project;\n            option.value = project;\n            projectNode.appendChild(option);\n        })\n    }\n\n    static loadPriorities() {\n        const priorityNode = document.querySelector("#priority");\n        priorityNode.innerHTML = "";\n        Priority.list.forEach(priority => {\n            const option = document.createElement("option");\n            option.textContent = priority;\n            priorityNode.appendChild(option);\n        })\n        priorityNode.value = Priority.list[1];\n    }\n\n    static displayTodo() {\n\n        Todos.list.forEach(todo => {\n            const div = Dom.contentDiv.querySelector(`[data-project="${todo.project}"]`);\n\n            const allTodosDiv = div.querySelector("#allTodosDiv");\n            allTodosDiv.classList.add("allTodosDiv");\n\n            const todoDiv = document.createElement("div");\n            todoDiv.setAttribute("data-id", todo.id);\n            todoDiv.classList.add("todoDiv");\n            const colorDiv = document.createElement("div");\n            colorDiv.classList.add(`${Dom.addColorToTodo(todo.priority)}`);\n            const title = document.createElement("h4");\n            title.textContent = todo.title;\n            title.classList.add("todoTitle");\n            const buttonsDiv = document.createElement("div");\n            const input = document.createElement("input");\n            input.type = "checkbox";\n            input.checked = todo.completionStatus;\n            if (input.checked) input.classList.add("check");\n            input.disabled = true;\n            buttonsDiv.classList.add("buttonsDiv");\n            const editButton = document.createElement("button");\n            editButton.classList.add("editButton");\n            editButton.classList.add("modify-button");\n            const delButton = document.createElement("button");\n            delButton.classList.add("delButton");\n            delButton.classList.add("remove-button");\n\n            buttonsDiv.append(input, editButton, delButton);\n            todoDiv.append(colorDiv, title, buttonsDiv);\n            allTodosDiv.appendChild(todoDiv);\n        })\n    }\n\n    static editTodoDisplay(target) {\n        const todo = target.closest("[data-id]");\n        const todoId = todo.getAttribute("data-id");\n        \n        const targetTodo = Todos.list.filter(todo => todo.id === todoId).shift(); // filters the array then takes out the first item.\n\n        const dialog = document.createElement("dialog");\n        dialog.classList.add("edit-dialog");\n        document.body.appendChild(dialog);\n\n        const form = document.createElement("form");\n        form.classList.add("edit-form");\n        dialog.appendChild(form);\n\n        const editMainDiv = document.createElement("div");\n        editMainDiv.classList.add("edit-main-div");\n        form.appendChild(editMainDiv);\n\n        const id = document.createElement("input");\n        id.type = "hidden";\n        id.id = "ed-id";\n        id.value = targetTodo.id;\n        editMainDiv.appendChild(id);\n\n        function createSection(editMainDiv, propertyName, propertyValue) {\n            const div = document.createElement("div");\n            div.classList.add("edit-section-div");\n            const header = document.createElement("p");\n            header.classList.add("edit-header");\n\n            if (propertyName === "completionStatus") {\n                header.textContent = "COMPLETION STATUS";\n            } else {\n                header.textContent = propertyName.toUpperCase();\n            }\n\n            const itemDiv = document.createElement("div");\n            itemDiv.classList.add("edit-item-div");\n\n            if (propertyName === "priority" || propertyName === "project") {\n                let optionArr;\n                const item = document.createElement("select");\n                if (propertyName === "priority") {\n                    optionArr = Priority;\n                    item.id = "ed-priority";\n                }\n                if (propertyName === "project") {\n                    item.id = "ed-project";\n                    div.classList.add("edit-project");\n                    const addbtn = FormDom.addButton(div);\n                    addbtn.classList.add("edit-add-proj");\n                    const newProj = FormDom.createProjectAdder(div);\n                    newProj.classList.add("edit-new-proj");\n                    optionArr = Projects;\n                }\n\n                optionArr.list.forEach(opt => {\n                    const option = document.createElement("option");\n                    option.textContent = opt;\n                    option.value = opt;\n                    item.appendChild(option);\n                })\n\n                item.classList.add("edit-item-select");\n                item.value = propertyValue;\n                itemDiv.appendChild(item);\n\n            } else if (propertyName === "description" || propertyName === "notes") {\n                const item = document.createElement("textarea");\n                if (propertyName === "description") {\n                    item.id = "ed-description";\n                }\n                if (propertyName === "notes") {\n                    item.id = "ed-notes";\n                }\n                item.classList.add("edit-item-textarea");\n                item.value = propertyValue;\n                itemDiv.appendChild(item);\n\n            } else if (propertyName === "checklist") {\n                div.classList.add("edit-checklist");\n                const plus = FormDom.addButton(div);\n                plus.classList.add("checklist-plus");\n                const itemInnerDiv = document.createElement("div");\n                const entityDiv = document.createElement("div");\n                entityDiv.classList.add("checklist-entity-div");\n                const p1Div = document.createElement("div");\n                const p1 = document.createElement("p");\n                p1.textContent = "STATUS";\n                p1Div.appendChild(p1);\n                const p2Div = document.createElement("div");\n                const p2 = document.createElement("p");\n                p2.textContent = "ITEM";\n                p2Div.appendChild(p2);\n                const p3Div = document.createElement("div");\n                const p3 = document.createElement("p");\n                p3.textContent = "QTY.";\n                p3Div.appendChild(p3);\n                entityDiv.append(p1Div, p2Div, p3Div);\n\n                const checkDiv = document.createElement("div");\n                checkDiv.classList.add("checklist-chkdiv");\n\n                if (propertyValue !== null) {\n                    propertyValue.forEach(checklist => {\n                        FormDom.utilChecklist(checkDiv, checklist.status, checklist.text, checklist.quantity);\n                    })\n                }\n\n                itemInnerDiv.append(entityDiv, checkDiv);\n                itemDiv.appendChild(itemInnerDiv);\n\n            } else if (propertyName === "completionStatus") {\n                itemDiv.classList.add("edit-completion-div");\n                const item = document.createElement("input");\n                item.id = "ed-complete";\n                item.classList.add("edit-completion-status");\n                const label = document.createElement("p");\n                label.classList.add("edit-completion-label");\n                item.type = "checkbox";\n                if (propertyValue === true) item.checked = true;\n                label.textContent = item.checked ? "COMPLETED" : "NOT YET COMPLETED";\n                itemDiv.append(item, label);\n            } else {\n                const item = document.createElement("input");\n\n                if (propertyName === "dueDate") {\n                    item.type = "date";\n                    item.classList.add("edit-item-date");\n                    item.id = "ed-dueDate";\n                }\n\n                if (propertyName === "title") {\n                    item.type = "text";\n                    item.id = "ed-title";\n                }\n\n                item.classList.add("edit-item-input");\n                item.value = propertyValue;\n                itemDiv.appendChild(item);\n            }\n\n            div.append(header, itemDiv);\n            editMainDiv.appendChild(div);\n        }\n\n        for (let key in targetTodo) {\n            if (key !== "id") {\n                createSection(editMainDiv, key, targetTodo[key]);\n            }\n        }\n\n        const btnDiv = document.createElement("div");\n        btnDiv.classList.add("edit-btn-div");\n        const approveBtn = document.createElement("button");\n        approveBtn.classList.add("edit-aprv-btn");\n        approveBtn.textContent = "✔";\n        approveBtn.type = "button";\n        const cancelBtn = document.createElement("button");\n        cancelBtn.classList.add("edit-rmv-btn");\n        cancelBtn.textContent = "✖";\n        cancelBtn.type = "button";\n        btnDiv.append(approveBtn, cancelBtn);\n        editMainDiv.appendChild(btnDiv);\n\n        dialog.showModal();\n\n    }\n\n    static updateTodo(targetID) {\n        const todo = Todos.list.find(item => item.id === targetID);\n\n        const project = document.querySelector("#ed-project");\n        todo.project = project.value;\n\n        const title = document.querySelector("#ed-title");\n        todo.title = title.value;\n\n        const description = document.querySelector("#ed-description");\n        todo.description = description.value;\n\n        const dueDate = document.querySelector("#ed-dueDate");\n        todo.dueDate = dueDate.value;\n\n        const priority = document.querySelector("#ed-priority");\n        todo.priority = priority.value;\n\n        const notes = document.querySelector("#ed-notes");\n        todo.notes = notes.value;\n\n        const checklistArr = Array.from(document.querySelectorAll(".checklist-single-div"));\n        if (checklistArr.length === 0) {\n            todo.checklist = null;\n        } else {\n            let arrContainer = [];\n            checklistArr.forEach(container => {\n                const stats = container.querySelector(\'input[type="checkbox"]\');\n                const status = stats.checked;\n                const text = container.querySelector(\'input[type="text"]\').value;\n                const quantity = container.querySelector(\'input[type="number"]\').value;\n                if (!Validation.notEmpty(text)) return;\n                arrContainer.push({text, quantity, status});\n            })\n\n            if (arrContainer.length === 0) {\n                todo.checklist = null;\n            } else {\n                todo.checklist = arrContainer;\n            }\n        }\n\n        const completionStatus = document.querySelector("#ed-complete");\n        todo.completionStatus = completionStatus.checked;\n\n\n    }\n\n    static addColorToTodo(priority) {\n        switch(priority) {\n            case "Top Priority":\n                return "topPrio";\n            break\n            case "Medium Priority":\n                return "midPrio";\n            break\n            case "Low Priority":\n                return "lowPrio";\n            break\n        }\n    }\n\n    static closeForm() {\n        const form = document.querySelector("#task-form");\n        const dialog = document.querySelector("#form-dialog");\n        Dom.hideProjectAdder();\n        form.reset();\n        FormDom.clearChecklist();\n        dialog.close();\n    }\n\n    static showProjectAdder() {\n        const newProjectDiv = document.querySelector(".new-project-container");\n        const projectAdderBtn = document.querySelector("#add-project-btn");\n        projectAdderBtn.textContent = "-";\n        projectAdderBtn.classList.add("minus-button");\n        newProjectDiv.classList.add("flex");\n    }\n\n    static hideProjectAdder() {\n        const newProjectDiv = document.querySelector(".new-project-container");\n        const projectAdderBtn = document.querySelector("#add-project-btn");\n        projectAdderBtn.textContent = "+";\n        projectAdderBtn.classList.remove("minus-button");\n        newProjectDiv.classList.remove("flex");\n    }\n\n    static showWarning() {\n        const dialog = document.createElement("dialog");\n        dialog.classList.add("warning-dialog");\n        const container = document.createElement("div");\n        const warningContainer = document.createElement("div");\n        const warningLogo = document.createElement("p");\n        warningLogo.textContent = "!";\n        const warning = document.createElement("p");\n        warning.textContent = "You can only delete an empty project.";\n        const btn = document.createElement("button");\n        btn.textContent = "OK";\n        btn.classList.add("warning-ok");\n        \n        warningContainer.append(warningLogo, warning);\n        container.append(warningContainer, btn);\n        dialog.appendChild(container);\n        document.body.appendChild(dialog);\n        dialog.showModal();\n    }\n}\n\nclass FormDom extends Dom {\n    static addProject() {\n       const input = document.querySelector("#add-project-input");\n       const project = document.querySelector("#project");\n\n       if (!Validation.notEmpty(input.value)) { //Checks if empty or just pure white space.\n            input.setCustomValidity("This field cannot be empty.");\n            input.reportValidity();\n            return\n       }\n\n       Projects.add(input.value);\n       localStorage.setItem("project", JSON.stringify(Projects.list));\n       super.hideProjectAdder();\n       super.loadFormOptions();\n\n       project.value = input.value; // sets the input value as it\'s default.\n\n       input.value = "";\n    }\n\n    static addChecklist() {\n        const mainCheckDiv = document.querySelector("#checklist-div");\n\n        const allChecklists = mainCheckDiv.querySelectorAll(".checkdiv"); // To determine the data-id attribute.\n\n        const outerDiv = document.createElement("div");\n        outerDiv.classList.add("checkdiv");\n        outerDiv.setAttribute("data-id", `${allChecklists.length + 1}`);\n\n        const innerDiv1 = document.createElement("div");\n        const checkbox = document.createElement("input");\n        checkbox.type = "checkbox";\n        const input = document.createElement("input");\n        input.type = "text";\n        const quantity = document.createElement("input");\n        quantity.type = "number";\n\n        const innerDiv2 = document.createElement("div");\n        const delBtn = document.createElement("button");\n        delBtn.textContent = "x";\n\n        innerDiv2.appendChild(delBtn);\n        innerDiv1.append(checkbox, input, quantity);\n        outerDiv.append(innerDiv1, innerDiv2);\n        mainCheckDiv.appendChild(outerDiv);\n    }\n\n    static removeChecklist(target) {\n        const targetDiv = target.closest("[data-id]");\n        targetDiv.remove();\n    }\n\n    static clearChecklist() {\n        const mainCheckDiv = document.querySelector("#checklist-div");\n        mainCheckDiv.innerHTML = "";\n    }\n\n    static utilChecklist(parentDiv, stat, text, quantity) {\n        const singleChkDiv = document.createElement("div");\n        singleChkDiv.classList.add("checklist-single-div");\n        const statusDiv = document.createElement("div");\n        const status = document.createElement("input");\n        status.type = "checkbox";\n        if (stat === true) status.checked = true;\n        statusDiv.appendChild(status);\n        const itemDiv = document.createElement("div");\n        const item = document.createElement("input");\n        item.type = "text";\n        item.value = text;\n        itemDiv.appendChild(item);\n        const qtyDiv = document.createElement("div");\n        const qty = document.createElement("input");\n        qty.type = "number";\n        qty.value = quantity;\n        const delDiv = document.createElement("div");\n        const delBtn = document.createElement("button");\n        delBtn.textContent = "✖";\n        delBtn.type = "button";\n        delBtn.classList.add("rmv-btn");\n\n        delDiv.appendChild(delBtn);\n        qtyDiv.appendChild(qty);\n        singleChkDiv.append(statusDiv, itemDiv, qtyDiv, delDiv);\n        parentDiv.appendChild(singleChkDiv);\n    }\n\n    static addButton(parentElement) {\n        const button = document.createElement("button");\n        button.textContent = "✚";\n        button.type = "button";\n        parentElement.appendChild(button);\n        return button;\n    }\n\n    static createProjectAdder(parentElement) {\n        const mainContainer = document.createElement("div");\n        const inputContainer = document.createElement("div");\n        const para = document.createElement("p");\n        para.textContent = "NEW PROJECT";\n        const input = document.createElement("input");\n        input.classList.add("plus-proj-input");\n        input.type = "text";\n        const btnContainer = document.createElement("div");\n        const addBtn = document.createElement("button");\n        addBtn.classList.add("plus-proj");\n        addBtn.textContent = "ADD";\n        addBtn.type = "button";\n\n        inputContainer.append(para, input);\n        btnContainer.appendChild(addBtn);\n        mainContainer.append(inputContainer, btnContainer);\n        parentElement.appendChild(mainContainer);\n        return mainContainer;\n    }\n\n    static createDialogForProject(h3) {\n        const dialog = document.createElement("dialog");\n        dialog.classList.add("project-dialog");\n\n        const form = document.createElement("form");\n        dialog.appendChild(form);\n\n        const container = document.createElement("div");\n        const label = document.createElement("label");\n        label.htmlFor = "up-project";\n        label.textContent = "EDIT PROJECT";\n\n        const input = document.createElement("input");\n        input.type = "text";\n        input.value = h3;\n        input.id = "up-project";\n\n        const btnDiv = document.createElement("div");\n        btnDiv.setAttribute("data-name", h3);\n        const approve = document.createElement("button");\n        approve.classList.add("up-btn");\n        const cancel = document.createElement("button");\n        cancel.classList.add("x-btn");\n        approve.type = "button";\n        approve.textContent = "✔";\n        cancel.type = "button";\n        cancel.textContent = "✖";\n\n        btnDiv.append(approve, cancel);\n        container.append(label, input);\n\n        form.append(container, btnDiv);\n        dialog.appendChild(form);\n        document.body.appendChild(dialog);\n        dialog.showModal();\n    }\n\n    static editProject(input, data) {\n        const targetIndex = Projects.list.findIndex(name => name === data);\n        Projects.list[targetIndex] = input;\n\n        Todos.list.filter(todo => todo.project === data).map(todo => todo.project = input);\n\n        localStorage.setItem("list", JSON.stringify(Todos.list));\n        localStorage.setItem("project", JSON.stringify(Projects.list));\n    }\n}\n\nclass Nav {\n    static showProjects() {\n        const projectDiv = document.querySelector("#nav-projects");\n        projectDiv.innerHTML = "";\n\n        Projects.list.forEach(project => {\n            const div = document.createElement("div");\n            const p = document.createElement("p");\n            const a = document.createElement("a");\n            a.textContent = project;\n            a.href = "";\n            a.classList.add("project-link");\n            p.appendChild(a);\n            div.appendChild(p);\n            projectDiv.appendChild(div);\n        })\n    }\n\n    static highlightDirectory(event) {\n        const nav = document.querySelector("nav");\n        const allLinksUnderNav = nav.querySelectorAll("a");\n\n        if (event.target.matches("a")) {\n            event.preventDefault();\n            const title = event.target.textContent;\n\n            Array.from(allLinksUnderNav).forEach(link => {\n                const closestDiv = link.closest("div");\n                if (title === link.textContent) {\n                    closestDiv.classList.add("nav-location");\n                } else {\n                    closestDiv.classList.remove("nav-location");\n                }\n            })\n        }\n    }\n}\n;// ./src/scripts/form.js\n\n\n\n\nclass Form {\n\n    static #input = {}\n\n    static get input() {\n        Object.getOwnPropertyNames(this)\n        .filter(name => typeof Object.getOwnPropertyDescriptor(this, name).value === "function" && name !== "constructor" && name !== "input")\n        .map(func => this[func]()); // Automatically runs all the methods when called.\n        \n        return this.#input;\n    }\n\n    static getProject() {\n        const projectNode = document.querySelector("#project");\n        this.#input["project"] = projectNode.value;\n    }\n\n    static getTitle() {\n        const titleNode = document.querySelector("#title");\n        this.#input["title"] = titleNode.value;\n    }\n    \n    static getDescription() {\n        const descriptionNode = document.querySelector("#description");\n        this.#input["description"] = descriptionNode.value;\n    }\n    \n    static getDueDate() {\n        const dueDateNode = document.querySelector("#dueDate");\n        this.#input["dueDate"] = dueDateNode.value;\n    }\n    \n    static getPriority() {\n        const priorityNode = document.querySelector("#priority");\n        this.#input["priority"] = priorityNode.value;\n    }\n    \n    static getNotes() {\n        const notesNode = document.querySelector("#notes");\n        this.#input["notes"] = notesNode.value;\n    }\n    \n    static getChecklist() {\n        const checklistDiv = document.querySelector("#checklist-div");\n        const checklists = Array.from(checklistDiv.querySelectorAll("[data-id]"));\n        \n        if (checklists.length === 0) {\n            this.#input["checklist"] = null;\n            return \n        }\n    \n        let checklistArr = [];\n    \n        checklists.forEach(checklist => {\n            const textNode = checklist.querySelector(`input[type="text"]`);\n            const text = textNode.value;\n            const quantityNode = checklist.querySelector(`input[type="number"]`);\n            const quantity = quantityNode.value;\n            const statusNode = checklist.querySelector(`input[type="checkbox"]`);\n            const status = statusNode.checked ? true : false;\n    \n            if (!Validation.notEmpty(text)) return\n            checklistArr.push({text, quantity, status});\n        })\n    \n        this.#input["checklist"] = checklistArr;\n    }\n    \n    static getCompletionStatus() {\n        const completionStatusNode = document.querySelector("#completionStatus");\n        this.#input["completionStatus"] = completionStatusNode.checked ? true : false;\n    }\n\n    static getID() {\n        const count = Todos.list.length;\n        this.#input["id"] = `id-${format(new Date(), "yyyyMMdd-HHmmss")}`;\n    }\n}\n;// ./src/scripts/create-todo.js\n\n\n\nfunction saveTodo() {\n    const input =  Form.input;\n    Todos.list.push(new Todos(input));\n    Todos.archive.push(new Todos(input));\n    localStorage.setItem("list", JSON.stringify(Todos.list));\n}\n;// ./src/index.js\n\n\n\n\n\n\n\ndocument.addEventListener("DOMContentLoaded", event => { // initialze the page.\n    const savedItems = JSON.parse(localStorage.getItem("list"));\n    if (savedItems !== null) savedItems.forEach(todo => Todos.list.push(new Todos(todo)));\n    const savedProj = JSON.parse(localStorage.getItem("project"));\n    if (savedProj !== null) savedProj.forEach(project => Projects.add(project));\n    const homeButton = document.querySelector("#home-link");\n    homeButton.closest("div").classList.add("nav-location");\n    Dom.initialize();\n})\n\nconst showFormBtn = document.querySelector("#show-form-btn"); \nconst formDialog = document.querySelector("#form-dialog");\nshowFormBtn.addEventListener("click", event => { // dialog shower\n    \n    Dom.loadFormOptions();\n    Dom.loadPriorities();\n    formDialog.showModal();\n    \n})\n\nconst src_form = document.querySelector("#task-form"); // check for submission\nsrc_form.addEventListener("submit", event => {\n    event.preventDefault();\n    saveTodo();\n    Dom.initialize();\n    Dom.closeForm();\n})\n\nsrc_form.addEventListener("keydown", event => {\n    if (event.key === "Escape") Dom.hideProjectAdder();\n})\n\nconst closeFormButton = document.querySelector("#close-form-button"); // dialog closer\ncloseFormButton.addEventListener("click", event => {\n    Dom.closeForm();\n})\n\nconst projectAdderBtn = document.querySelector("#add-project-btn"); // show/hide project adder\nprojectAdderBtn.addEventListener("click", event => {\n    const btnStatus = projectAdderBtn.textContent;\n    if (btnStatus === "+") {\n        Dom.showProjectAdder();\n    } else {\n        Dom.hideProjectAdder();\n    }\n})\n\nconst newProjBtn = document.querySelector(".new-proj-btn"); // project adder\nnewProjBtn.addEventListener("click", event => {\n    FormDom.addProject();\n    Dom.initialize();\n})\n\nconst checklistBtn = document.querySelector("#checklist-button");  // checklist adder.\nchecklistBtn.addEventListener("click", FormDom.addChecklist);\n\nconst mainCheckDiv = document.querySelector("#checklist-div"); // checklist remover.\nmainCheckDiv.addEventListener("click", event => {\n    if (event.target.matches("button")) FormDom.removeChecklist(event.target);\n})\n\nconst nav = document.querySelector("nav"); // Nav highlight design when clicked.\nnav.addEventListener("click", event => {\n    Nav.highlightDirectory(event);\n})\n\nconst homeButton = document.querySelector("#home-link"); // Home Display.\nhomeButton.addEventListener("click", event => {\n    Dom.initialize();\n});\n\nconst navProjectDiv = document.querySelector("#nav-projects"); // Project Navs\nnavProjectDiv.addEventListener("click", event => {\n    Dom.loadFullProject(event);\n})\n\nDom.contentDiv.addEventListener("click", event => { // Show Edit Dom\n    if (event.target.matches(".modify-button")) Dom.editTodoDisplay(event.target);\n})\n\ndocument.addEventListener("change", event => { // Changing the status on editDom\n    if (event.target.matches(".edit-completion-status")) {\n        const p = event.target.nextElementSibling;\n        p.textContent = event.target.checked === true ? "COMPLETED" : "NOT YET COMPLETED";\n    }\n})\n\ndocument.addEventListener("click", event => { // Show Add Project in Edit\n    if (event.target.matches(".edit-add-proj") || event.target.matches(".edit-minus-proj")) {\n        const newProj = document.querySelector(".edit-new-proj");\n        if (event.target.textContent === "✚") {\n            event.target.textContent = "-";\n            event.target.className = "";\n            event.target.classList.add("edit-minus-proj");\n            newProj.classList.toggle("show-display");\n            return\n        }\n\n        event.target.textContent = "✚";\n        event.target.className = "";\n        event.target.classList.add("edit-add-proj");\n        newProj.classList.toggle("show-display");\n    }\n})\n\ndocument.addEventListener("keydown", event => { // Escape key\n    if (event.key === "Escape") {\n        const editDialog = document.querySelector(".edit-dialog");\n        const projectDialog = document.querySelector(".project-dialog");\n        const warningDialog = document.querySelector(".warning-dialog");\n\n        if (editDialog !== null ) editDialog.remove();\n        if (projectDialog !== null) projectDialog.remove();\n        if (warningDialog !== null) warningDialog.remove();\n    }\n})\n\ndocument.addEventListener("click", event => {\n    if (event.target.matches(".plus-proj")) { // Add New Proj in Edit\n        const input = document.querySelector(".plus-proj-input");\n        const btn = document.querySelector(".edit-minus-proj");\n        const select = document.querySelector(".edit-item-select");\n\n        if (!Validation.notEmpty(input.value)) {\n            input.setCustomValidity("This field cannot be empty.");\n            input.reportValidity();\n            return\n        }\n\n        Projects.add(input.value);\n        localStorage.setItem("project", JSON.stringify(Projects.list));\n        select.innerHTML = "";\n        Projects.list.forEach(project => {\n            const opt = document.createElement("option");\n            opt.value = project;\n            opt.textContent = project;\n            select.appendChild(opt);\n        })\n        input.value = "";\n        Dom.initialize();\n        btn.click();\n    }\n\n    if (event.target.matches(".checklist-plus")) { // creates new checklist in edit\n        const chkDiv = document.querySelector(".checklist-chkdiv");\n        FormDom.utilChecklist(chkDiv, false, "", "");\n    }\n\n    if (event.target.matches(".rmv-btn")) { // checklist item remove.\n        const targetChecklist = event.target.closest(".checklist-single-div");\n        targetChecklist.remove();\n    }\n\n    if (event.target.matches(".edit-rmv-btn")) { // whole dialog remove.\n        const editDialog = document.querySelector(".edit-dialog");\n        editDialog.remove();\n    }\n\n    if (event.target.matches(".edit-aprv-btn")) { // update Todo.\n        const id = document.querySelector("#ed-id").value;\n        const editDialog = document.querySelector(".edit-dialog");\n\n        Dom.updateTodo(id);\n        localStorage.setItem("list", JSON.stringify(Todos.list));\n        Dom.initialize();\n        editDialog.remove();\n    }\n\n    if (event.target.matches(".remove-button")) { // remove todo.\n        const id = event.target.closest("[data-id]").getAttribute("data-id");\n        const todo = Todos.list.findIndex(todo => todo.id);\n        Todos.list.splice(todo, 1);\n        localStorage.setItem("list", JSON.stringify(Todos.list));\n        Dom.initialize();\n    }\n\n    if (event.target.matches(".project-edit-btn")) { // Project editor shower.\n        const parentDiv = event.target.closest(".projectTitleDiv") || event.target.closest(".project-innerdiv-first");\n        const textContent = parentDiv.querySelector("h3").textContent;\n        FormDom.createDialogForProject(textContent);\n    }\n\n    if (event.target.matches(".up-btn")) { // Project editor.\n        const input = event.target.closest("form").querySelector("input");\n        const data = event.target.closest("div").getAttribute("data-name");\n\n        if (!Validation.notEmpty(input.value)) {\n            input.setCustomValidity("This can\'t be left empty.");\n            input.reportValidity();\n            return\n        }\n\n        FormDom.editProject(input.value, data);\n        Dom.initialize();\n        event.target.closest("dialog").remove();\n    }\n\n    if (event.target.matches(".x-btn")) { // removes dialog upon closure.\n        event.target.closest("dialog").remove();\n    }\n\n    if (event.target.matches(".delBtn")) { // removes project.\n        const parentDiv = event.target.closest(".projectTitleDiv") || event.target.closest(".project-innerdiv-first");\n        const textContent = parentDiv.querySelector("h3").textContent;\n\n        const todoArr = Todos.list.filter(todo => todo.project === textContent);\n\n        if (todoArr.length !== 0) {\n            Dom.showWarning();\n            return\n        }\n\n        const target = Projects.list.findIndex(name => name === textContent);\n        Projects.list.splice(target, 1);\n        localStorage.setItem("project", JSON.stringify(Projects.list));\n        Dom.initialize();\n    }\n\n    if (event.target.matches(".warning-ok")) {\n        event.target.closest("dialog").remove();\n    }\n})//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///989\n')}},__webpack_module_cache__={};function __webpack_require__(I){var n=__webpack_module_cache__[I];if(void 0!==n)return n.exports;var g=__webpack_module_cache__[I]={id:I,exports:{}};return __webpack_modules__[I](g,g.exports,__webpack_require__),g.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=I=>{var n=I&&I.__esModule?()=>I.default:()=>I;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(I,n)=>{for(var g in n)__webpack_require__.o(n,g)&&!__webpack_require__.o(I,g)&&Object.defineProperty(I,g,{enumerable:!0,get:n[g]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(I){if("object"==typeof window)return window}}(),__webpack_require__.o=(I,n)=>Object.prototype.hasOwnProperty.call(I,n),(()=>{var I;__webpack_require__.g.importScripts&&(I=__webpack_require__.g.location+"");var n=__webpack_require__.g.document;if(!I&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(I=n.currentScript.src),!I)){var g=n.getElementsByTagName("script");if(g.length)for(var t=g.length-1;t>-1&&(!I||!/^http(s?):/.test(I));)I=g[t--].src}if(!I)throw new Error("Automatic publicPath is not supported in this browser");I=I.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=I})(),__webpack_require__.b=document.baseURI||self.location.href,__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(989)})();